{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst types_1 = require(\"./types\");\n\nconst parseBody = (response, responseType, parseJson, encoding) => {\n  const {\n    rawBody\n  } = response;\n\n  try {\n    if (responseType === 'text') {\n      return rawBody.toString(encoding);\n    }\n\n    if (responseType === 'json') {\n      return rawBody.length === 0 ? '' : parseJson(rawBody.toString());\n    }\n\n    if (responseType === 'buffer') {\n      return rawBody;\n    }\n\n    throw new types_1.ParseError({\n      message: `Unknown body type '${responseType}'`,\n      name: 'Error'\n    }, response);\n  } catch (error) {\n    throw new types_1.ParseError(error, response);\n  }\n};\n\nexports.default = parseBody;","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/got/dist/source/as-promise/parse-body.js"],"names":["Object","defineProperty","exports","value","types_1","require","parseBody","response","responseType","parseJson","encoding","rawBody","toString","length","ParseError","message","name","error","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,YAAX,EAAyBC,SAAzB,EAAoCC,QAApC,KAAiD;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,QAApB;;AACA,MAAI;AACA,QAAIC,YAAY,KAAK,MAArB,EAA6B;AACzB,aAAOG,OAAO,CAACC,QAAR,CAAiBF,QAAjB,CAAP;AACH;;AACD,QAAIF,YAAY,KAAK,MAArB,EAA6B;AACzB,aAAOG,OAAO,CAACE,MAAR,KAAmB,CAAnB,GAAuB,EAAvB,GAA4BJ,SAAS,CAACE,OAAO,CAACC,QAAR,EAAD,CAA5C;AACH;;AACD,QAAIJ,YAAY,KAAK,QAArB,EAA+B;AAC3B,aAAOG,OAAP;AACH;;AACD,UAAM,IAAIP,OAAO,CAACU,UAAZ,CAAuB;AACzBC,MAAAA,OAAO,EAAG,sBAAqBP,YAAa,GADnB;AAEzBQ,MAAAA,IAAI,EAAE;AAFmB,KAAvB,EAGHT,QAHG,CAAN;AAIH,GAdD,CAeA,OAAOU,KAAP,EAAc;AACV,UAAM,IAAIb,OAAO,CAACU,UAAZ,CAAuBG,KAAvB,EAA8BV,QAA9B,CAAN;AACH;AACJ,CApBD;;AAqBAL,OAAO,CAACgB,OAAR,GAAkBZ,SAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nconst parseBody = (response, responseType, parseJson, encoding) => {\n    const { rawBody } = response;\n    try {\n        if (responseType === 'text') {\n            return rawBody.toString(encoding);\n        }\n        if (responseType === 'json') {\n            return rawBody.length === 0 ? '' : parseJson(rawBody.toString());\n        }\n        if (responseType === 'buffer') {\n            return rawBody;\n        }\n        throw new types_1.ParseError({\n            message: `Unknown body type '${responseType}'`,\n            name: 'Error'\n        }, response);\n    }\n    catch (error) {\n        throw new types_1.ParseError(error, response);\n    }\n};\nexports.default = parseBody;\n"]},"metadata":{},"sourceType":"script"}