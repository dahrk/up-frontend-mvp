{"ast":null,"code":"'use strict';\n\nconst net = require('net');\n/* istanbul ignore file: https://github.com/nodejs/node/blob/v13.0.1/lib/_http_agent.js */\n\n\nmodule.exports = options => {\n  let servername = options.host;\n  const hostHeader = options.headers && options.headers.host;\n\n  if (hostHeader) {\n    if (hostHeader.startsWith('[')) {\n      const index = hostHeader.indexOf(']');\n\n      if (index === -1) {\n        servername = hostHeader;\n      } else {\n        servername = hostHeader.slice(1, -1);\n      }\n    } else {\n      servername = hostHeader.split(':', 1)[0];\n    }\n  }\n\n  if (net.isIP(servername)) {\n    return '';\n  }\n\n  return servername;\n};","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/http2-wrapper/source/utils/calculate-server-name.js"],"names":["net","require","module","exports","options","servername","host","hostHeader","headers","startsWith","index","indexOf","slice","split","isIP"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAO,IAAI;AAC3B,MAAIC,UAAU,GAAGD,OAAO,CAACE,IAAzB;AACA,QAAMC,UAAU,GAAGH,OAAO,CAACI,OAAR,IAAmBJ,OAAO,CAACI,OAAR,CAAgBF,IAAtD;;AAEA,MAAIC,UAAJ,EAAgB;AACf,QAAIA,UAAU,CAACE,UAAX,CAAsB,GAAtB,CAAJ,EAAgC;AAC/B,YAAMC,KAAK,GAAGH,UAAU,CAACI,OAAX,CAAmB,GAAnB,CAAd;;AACA,UAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AACjBL,QAAAA,UAAU,GAAGE,UAAb;AACA,OAFD,MAEO;AACNF,QAAAA,UAAU,GAAGE,UAAU,CAACK,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAb;AACA;AACD,KAPD,MAOO;AACNP,MAAAA,UAAU,GAAGE,UAAU,CAACM,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyB,CAAzB,CAAb;AACA;AACD;;AAED,MAAIb,GAAG,CAACc,IAAJ,CAAST,UAAT,CAAJ,EAA0B;AACzB,WAAO,EAAP;AACA;;AAED,SAAOA,UAAP;AACA,CAtBD","sourcesContent":["'use strict';\nconst net = require('net');\n/* istanbul ignore file: https://github.com/nodejs/node/blob/v13.0.1/lib/_http_agent.js */\n\nmodule.exports = options => {\n\tlet servername = options.host;\n\tconst hostHeader = options.headers && options.headers.host;\n\n\tif (hostHeader) {\n\t\tif (hostHeader.startsWith('[')) {\n\t\t\tconst index = hostHeader.indexOf(']');\n\t\t\tif (index === -1) {\n\t\t\t\tservername = hostHeader;\n\t\t\t} else {\n\t\t\t\tservername = hostHeader.slice(1, -1);\n\t\t\t}\n\t\t} else {\n\t\t\tservername = hostHeader.split(':', 1)[0];\n\t\t}\n\t}\n\n\tif (net.isIP(servername)) {\n\t\treturn '';\n\t}\n\n\treturn servername;\n};\n"]},"metadata":{},"sourceType":"script"}