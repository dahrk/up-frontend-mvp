{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\n\nconst helpers_1 = require(\"./helpers\");\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"debug\";\n  LogLevel[\"INFO\"] = \"info\";\n  LogLevel[\"WARN\"] = \"warn\";\n  LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n\nfunction makeConsoleLogger(name) {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo);\n  };\n}\n\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\n\nfunction logLevelSeverity(level) {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20;\n\n    case LogLevel.INFO:\n      return 40;\n\n    case LogLevel.WARN:\n      return 60;\n\n    case LogLevel.ERROR:\n      return 80;\n\n    default:\n      return helpers_1.assertNever(level);\n  }\n}\n\nexports.logLevelSeverity = logLevelSeverity;","map":{"version":3,"sources":["../../src/logging.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAClB,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CALD,EAAY,QAAQ,GAAR,OAAA,CAAA,QAAA,KAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAZ;;AAWA,SAAgB,iBAAhB,CAAkC,IAAlC,EAA8C;AAC5C,SAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,KAA8B;AACnC,IAAA,OAAO,CAAC,KAAD,CAAP,CAAe,GAAG,IAAI,IAAI,KAAK,GAA/B,EAAoC,OAApC,EAA6C,SAA7C;AACD,GAFD;AAGD;;AAJD,OAAA,CAAA,iBAAA,GAAA,iBAAA;AAMA;;AAEG;;AACH,SAAgB,gBAAhB,CAAiC,KAAjC,EAAgD;AAC9C,UAAQ,KAAR;AACE,SAAK,QAAQ,CAAC,KAAd;AACE,aAAO,EAAP;;AACF,SAAK,QAAQ,CAAC,IAAd;AACE,aAAO,EAAP;;AACF,SAAK,QAAQ,CAAC,IAAd;AACE,aAAO,EAAP;;AACF,SAAK,QAAQ,CAAC,KAAd;AACE,aAAO,EAAP;;AACF;AACE,aAAO,SAAA,CAAA,WAAA,CAAY,KAAZ,CAAP;AAVJ;AAYD;;AAbD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourcesContent":["import { assertNever } from \"./helpers\"\n\nexport enum LogLevel {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  WARN = \"warn\",\n  ERROR = \"error\",\n}\n\nexport interface Logger {\n  (level: LogLevel, message: string, extraInfo: Record<string, unknown>): void\n}\n\nexport function makeConsoleLogger(name: string): Logger {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo)\n  }\n}\n\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nexport function logLevelSeverity(level: LogLevel): number {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20\n    case LogLevel.INFO:\n      return 40\n    case LogLevel.WARN:\n      return 60\n    case LogLevel.ERROR:\n      return 80\n    default:\n      return assertNever(level)\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}