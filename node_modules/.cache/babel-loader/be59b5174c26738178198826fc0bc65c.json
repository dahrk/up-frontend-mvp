{"ast":null,"code":"'use strict';\n\nconst {\n  V4MAPPED,\n  ADDRCONFIG,\n  ALL,\n  promises: {\n    Resolver: AsyncResolver\n  },\n  lookup: dnsLookup\n} = require('dns');\n\nconst {\n  promisify\n} = require('util');\n\nconst os = require('os');\n\nconst kCacheableLookupCreateConnection = Symbol('cacheableLookupCreateConnection');\nconst kCacheableLookupInstance = Symbol('cacheableLookupInstance');\nconst kExpires = Symbol('expires');\nconst supportsALL = typeof ALL === 'number';\n\nconst verifyAgent = agent => {\n  if (!(agent && typeof agent.createConnection === 'function')) {\n    throw new Error('Expected an Agent instance as the first argument');\n  }\n};\n\nconst map4to6 = entries => {\n  for (const entry of entries) {\n    if (entry.family === 6) {\n      continue;\n    }\n\n    entry.address = `::ffff:${entry.address}`;\n    entry.family = 6;\n  }\n};\n\nconst getIfaceInfo = () => {\n  let has4 = false;\n  let has6 = false;\n\n  for (const device of Object.values(os.networkInterfaces())) {\n    for (const iface of device) {\n      if (iface.internal) {\n        continue;\n      }\n\n      if (iface.family === 'IPv6') {\n        has6 = true;\n      } else {\n        has4 = true;\n      }\n\n      if (has4 && has6) {\n        return {\n          has4,\n          has6\n        };\n      }\n    }\n  }\n\n  return {\n    has4,\n    has6\n  };\n};\n\nconst isIterable = map => {\n  return Symbol.iterator in map;\n};\n\nconst ttl = {\n  ttl: true\n};\nconst all = {\n  all: true\n};\n\nclass CacheableLookup {\n  constructor({\n    cache = new Map(),\n    maxTtl = Infinity,\n    fallbackDuration = 3600,\n    errorTtl = 0.15,\n    resolver = new AsyncResolver(),\n    lookup = dnsLookup\n  } = {}) {\n    this.maxTtl = maxTtl;\n    this.errorTtl = errorTtl;\n    this._cache = cache;\n    this._resolver = resolver;\n    this._dnsLookup = promisify(lookup);\n\n    if (this._resolver instanceof AsyncResolver) {\n      this._resolve4 = this._resolver.resolve4.bind(this._resolver);\n      this._resolve6 = this._resolver.resolve6.bind(this._resolver);\n    } else {\n      this._resolve4 = promisify(this._resolver.resolve4.bind(this._resolver));\n      this._resolve6 = promisify(this._resolver.resolve6.bind(this._resolver));\n    }\n\n    this._iface = getIfaceInfo();\n    this._pending = {};\n    this._nextRemovalTime = false;\n    this._hostnamesToFallback = new Set();\n\n    if (fallbackDuration < 1) {\n      this._fallback = false;\n    } else {\n      this._fallback = true;\n      const interval = setInterval(() => {\n        this._hostnamesToFallback.clear();\n      }, fallbackDuration * 1000);\n      /* istanbul ignore next: There is no `interval.unref()` when running inside an Electron renderer */\n\n      if (interval.unref) {\n        interval.unref();\n      }\n    }\n\n    this.lookup = this.lookup.bind(this);\n    this.lookupAsync = this.lookupAsync.bind(this);\n  }\n\n  set servers(servers) {\n    this.clear();\n\n    this._resolver.setServers(servers);\n  }\n\n  get servers() {\n    return this._resolver.getServers();\n  }\n\n  lookup(hostname, options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    } else if (typeof options === 'number') {\n      options = {\n        family: options\n      };\n    }\n\n    if (!callback) {\n      throw new Error('Callback must be a function.');\n    } // eslint-disable-next-line promise/prefer-await-to-then\n\n\n    this.lookupAsync(hostname, options).then(result => {\n      if (options.all) {\n        callback(null, result);\n      } else {\n        callback(null, result.address, result.family, result.expires, result.ttl);\n      }\n    }, callback);\n  }\n\n  async lookupAsync(hostname, options = {}) {\n    if (typeof options === 'number') {\n      options = {\n        family: options\n      };\n    }\n\n    let cached = await this.query(hostname);\n\n    if (options.family === 6) {\n      const filtered = cached.filter(entry => entry.family === 6);\n\n      if (options.hints & V4MAPPED) {\n        if (supportsALL && options.hints & ALL || filtered.length === 0) {\n          map4to6(cached);\n        } else {\n          cached = filtered;\n        }\n      } else {\n        cached = filtered;\n      }\n    } else if (options.family === 4) {\n      cached = cached.filter(entry => entry.family === 4);\n    }\n\n    if (options.hints & ADDRCONFIG) {\n      const {\n        _iface\n      } = this;\n      cached = cached.filter(entry => entry.family === 6 ? _iface.has6 : _iface.has4);\n    }\n\n    if (cached.length === 0) {\n      const error = new Error(`cacheableLookup ENOTFOUND ${hostname}`);\n      error.code = 'ENOTFOUND';\n      error.hostname = hostname;\n      throw error;\n    }\n\n    if (options.all) {\n      return cached;\n    }\n\n    return cached[0];\n  }\n\n  async query(hostname) {\n    let cached = await this._cache.get(hostname);\n\n    if (!cached) {\n      const pending = this._pending[hostname];\n\n      if (pending) {\n        cached = await pending;\n      } else {\n        const newPromise = this.queryAndCache(hostname);\n        this._pending[hostname] = newPromise;\n\n        try {\n          cached = await newPromise;\n        } finally {\n          delete this._pending[hostname];\n        }\n      }\n    }\n\n    cached = cached.map(entry => {\n      return { ...entry\n      };\n    });\n    return cached;\n  }\n\n  async _resolve(hostname) {\n    const wrap = async promise => {\n      try {\n        return await promise;\n      } catch (error) {\n        if (error.code === 'ENODATA' || error.code === 'ENOTFOUND') {\n          return [];\n        }\n\n        throw error;\n      }\n    }; // ANY is unsafe as it doesn't trigger new queries in the underlying server.\n\n\n    const [A, AAAA] = await Promise.all([this._resolve4(hostname, ttl), this._resolve6(hostname, ttl)].map(promise => wrap(promise)));\n    let aTtl = 0;\n    let aaaaTtl = 0;\n    let cacheTtl = 0;\n    const now = Date.now();\n\n    for (const entry of A) {\n      entry.family = 4;\n      entry.expires = now + entry.ttl * 1000;\n      aTtl = Math.max(aTtl, entry.ttl);\n    }\n\n    for (const entry of AAAA) {\n      entry.family = 6;\n      entry.expires = now + entry.ttl * 1000;\n      aaaaTtl = Math.max(aaaaTtl, entry.ttl);\n    }\n\n    if (A.length > 0) {\n      if (AAAA.length > 0) {\n        cacheTtl = Math.min(aTtl, aaaaTtl);\n      } else {\n        cacheTtl = aTtl;\n      }\n    } else {\n      cacheTtl = aaaaTtl;\n    }\n\n    return {\n      entries: [...A, ...AAAA],\n      cacheTtl\n    };\n  }\n\n  async _lookup(hostname) {\n    try {\n      const entries = await this._dnsLookup(hostname, {\n        all: true\n      });\n      return {\n        entries,\n        cacheTtl: 0\n      };\n    } catch (_) {\n      return {\n        entries: [],\n        cacheTtl: 0\n      };\n    }\n  }\n\n  async _set(hostname, data, cacheTtl) {\n    if (this.maxTtl > 0 && cacheTtl > 0) {\n      cacheTtl = Math.min(cacheTtl, this.maxTtl) * 1000;\n      data[kExpires] = Date.now() + cacheTtl;\n\n      try {\n        await this._cache.set(hostname, data, cacheTtl);\n      } catch (error) {\n        this.lookupAsync = async () => {\n          const cacheError = new Error('Cache Error. Please recreate the CacheableLookup instance.');\n          cacheError.cause = error;\n          throw cacheError;\n        };\n      }\n\n      if (isIterable(this._cache)) {\n        this._tick(cacheTtl);\n      }\n    }\n  }\n\n  async queryAndCache(hostname) {\n    if (this._hostnamesToFallback.has(hostname)) {\n      return this._dnsLookup(hostname, all);\n    }\n\n    let query = await this._resolve(hostname);\n\n    if (query.entries.length === 0 && this._fallback) {\n      query = await this._lookup(hostname);\n\n      if (query.entries.length !== 0) {\n        // Use `dns.lookup(...)` for that particular hostname\n        this._hostnamesToFallback.add(hostname);\n      }\n    }\n\n    const cacheTtl = query.entries.length === 0 ? this.errorTtl : query.cacheTtl;\n    await this._set(hostname, query.entries, cacheTtl);\n    return query.entries;\n  }\n\n  _tick(ms) {\n    const nextRemovalTime = this._nextRemovalTime;\n\n    if (!nextRemovalTime || ms < nextRemovalTime) {\n      clearTimeout(this._removalTimeout);\n      this._nextRemovalTime = ms;\n      this._removalTimeout = setTimeout(() => {\n        this._nextRemovalTime = false;\n        let nextExpiry = Infinity;\n        const now = Date.now();\n\n        for (const [hostname, entries] of this._cache) {\n          const expires = entries[kExpires];\n\n          if (now >= expires) {\n            this._cache.delete(hostname);\n          } else if (expires < nextExpiry) {\n            nextExpiry = expires;\n          }\n        }\n\n        if (nextExpiry !== Infinity) {\n          this._tick(nextExpiry - now);\n        }\n      }, ms);\n      /* istanbul ignore next: There is no `timeout.unref()` when running inside an Electron renderer */\n\n      if (this._removalTimeout.unref) {\n        this._removalTimeout.unref();\n      }\n    }\n  }\n\n  install(agent) {\n    verifyAgent(agent);\n\n    if (kCacheableLookupCreateConnection in agent) {\n      throw new Error('CacheableLookup has been already installed');\n    }\n\n    agent[kCacheableLookupCreateConnection] = agent.createConnection;\n    agent[kCacheableLookupInstance] = this;\n\n    agent.createConnection = (options, callback) => {\n      if (!('lookup' in options)) {\n        options.lookup = this.lookup;\n      }\n\n      return agent[kCacheableLookupCreateConnection](options, callback);\n    };\n  }\n\n  uninstall(agent) {\n    verifyAgent(agent);\n\n    if (agent[kCacheableLookupCreateConnection]) {\n      if (agent[kCacheableLookupInstance] !== this) {\n        throw new Error('The agent is not owned by this CacheableLookup instance');\n      }\n\n      agent.createConnection = agent[kCacheableLookupCreateConnection];\n      delete agent[kCacheableLookupCreateConnection];\n      delete agent[kCacheableLookupInstance];\n    }\n  }\n\n  updateInterfaceInfo() {\n    const {\n      _iface\n    } = this;\n    this._iface = getIfaceInfo();\n\n    if (_iface.has4 && !this._iface.has4 || _iface.has6 && !this._iface.has6) {\n      this._cache.clear();\n    }\n  }\n\n  clear(hostname) {\n    if (hostname) {\n      this._cache.delete(hostname);\n\n      return;\n    }\n\n    this._cache.clear();\n  }\n\n}\n\nmodule.exports = CacheableLookup;\nmodule.exports.default = CacheableLookup;","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/cacheable-lookup/source/index.js"],"names":["V4MAPPED","ADDRCONFIG","ALL","promises","Resolver","AsyncResolver","lookup","dnsLookup","require","promisify","os","kCacheableLookupCreateConnection","Symbol","kCacheableLookupInstance","kExpires","supportsALL","verifyAgent","agent","createConnection","Error","map4to6","entries","entry","family","address","getIfaceInfo","has4","has6","device","Object","values","networkInterfaces","iface","internal","isIterable","map","iterator","ttl","all","CacheableLookup","constructor","cache","Map","maxTtl","Infinity","fallbackDuration","errorTtl","resolver","_cache","_resolver","_dnsLookup","_resolve4","resolve4","bind","_resolve6","resolve6","_iface","_pending","_nextRemovalTime","_hostnamesToFallback","Set","_fallback","interval","setInterval","clear","unref","lookupAsync","servers","setServers","getServers","hostname","options","callback","then","result","expires","cached","query","filtered","filter","hints","length","error","code","get","pending","newPromise","queryAndCache","_resolve","wrap","promise","A","AAAA","Promise","aTtl","aaaaTtl","cacheTtl","now","Date","Math","max","min","_lookup","_","_set","data","set","cacheError","cause","_tick","has","add","ms","nextRemovalTime","clearTimeout","_removalTimeout","setTimeout","nextExpiry","delete","install","uninstall","updateInterfaceInfo","module","exports","default"],"mappings":"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","sourcesContent":["'use strict';\nconst {\n\tV4MAPPED,\n\tADDRCONFIG,\n\tALL,\n\tpromises: {\n\t\tResolver: AsyncResolver\n\t},\n\tlookup: dnsLookup\n} = require('dns');\nconst {promisify} = require('util');\nconst os = require('os');\n\nconst kCacheableLookupCreateConnection = Symbol('cacheableLookupCreateConnection');\nconst kCacheableLookupInstance = Symbol('cacheableLookupInstance');\nconst kExpires = Symbol('expires');\n\nconst supportsALL = typeof ALL === 'number';\n\nconst verifyAgent = agent => {\n\tif (!(agent && typeof agent.createConnection === 'function')) {\n\t\tthrow new Error('Expected an Agent instance as the first argument');\n\t}\n};\n\nconst map4to6 = entries => {\n\tfor (const entry of entries) {\n\t\tif (entry.family === 6) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tentry.address = `::ffff:${entry.address}`;\n\t\tentry.family = 6;\n\t}\n};\n\nconst getIfaceInfo = () => {\n\tlet has4 = false;\n\tlet has6 = false;\n\n\tfor (const device of Object.values(os.networkInterfaces())) {\n\t\tfor (const iface of device) {\n\t\t\tif (iface.internal) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (iface.family === 'IPv6') {\n\t\t\t\thas6 = true;\n\t\t\t} else {\n\t\t\t\thas4 = true;\n\t\t\t}\n\n\t\t\tif (has4 && has6) {\n\t\t\t\treturn {has4, has6};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {has4, has6};\n};\n\nconst isIterable = map => {\n\treturn Symbol.iterator in map;\n};\n\nconst ttl = {ttl: true};\nconst all = {all: true};\n\nclass CacheableLookup {\n\tconstructor({\n\t\tcache = new Map(),\n\t\tmaxTtl = Infinity,\n\t\tfallbackDuration = 3600,\n\t\terrorTtl = 0.15,\n\t\tresolver = new AsyncResolver(),\n\t\tlookup = dnsLookup\n\t} = {}) {\n\t\tthis.maxTtl = maxTtl;\n\t\tthis.errorTtl = errorTtl;\n\n\t\tthis._cache = cache;\n\t\tthis._resolver = resolver;\n\t\tthis._dnsLookup = promisify(lookup);\n\n\t\tif (this._resolver instanceof AsyncResolver) {\n\t\t\tthis._resolve4 = this._resolver.resolve4.bind(this._resolver);\n\t\t\tthis._resolve6 = this._resolver.resolve6.bind(this._resolver);\n\t\t} else {\n\t\t\tthis._resolve4 = promisify(this._resolver.resolve4.bind(this._resolver));\n\t\t\tthis._resolve6 = promisify(this._resolver.resolve6.bind(this._resolver));\n\t\t}\n\n\t\tthis._iface = getIfaceInfo();\n\n\t\tthis._pending = {};\n\t\tthis._nextRemovalTime = false;\n\t\tthis._hostnamesToFallback = new Set();\n\n\t\tif (fallbackDuration < 1) {\n\t\t\tthis._fallback = false;\n\t\t} else {\n\t\t\tthis._fallback = true;\n\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tthis._hostnamesToFallback.clear();\n\t\t\t}, fallbackDuration * 1000);\n\n\t\t\t/* istanbul ignore next: There is no `interval.unref()` when running inside an Electron renderer */\n\t\t\tif (interval.unref) {\n\t\t\t\tinterval.unref();\n\t\t\t}\n\t\t}\n\n\t\tthis.lookup = this.lookup.bind(this);\n\t\tthis.lookupAsync = this.lookupAsync.bind(this);\n\t}\n\n\tset servers(servers) {\n\t\tthis.clear();\n\n\t\tthis._resolver.setServers(servers);\n\t}\n\n\tget servers() {\n\t\treturn this._resolver.getServers();\n\t}\n\n\tlookup(hostname, options, callback) {\n\t\tif (typeof options === 'function') {\n\t\t\tcallback = options;\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'number') {\n\t\t\toptions = {\n\t\t\t\tfamily: options\n\t\t\t};\n\t\t}\n\n\t\tif (!callback) {\n\t\t\tthrow new Error('Callback must be a function.');\n\t\t}\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tthis.lookupAsync(hostname, options).then(result => {\n\t\t\tif (options.all) {\n\t\t\t\tcallback(null, result);\n\t\t\t} else {\n\t\t\t\tcallback(null, result.address, result.family, result.expires, result.ttl);\n\t\t\t}\n\t\t}, callback);\n\t}\n\n\tasync lookupAsync(hostname, options = {}) {\n\t\tif (typeof options === 'number') {\n\t\t\toptions = {\n\t\t\t\tfamily: options\n\t\t\t};\n\t\t}\n\n\t\tlet cached = await this.query(hostname);\n\n\t\tif (options.family === 6) {\n\t\t\tconst filtered = cached.filter(entry => entry.family === 6);\n\n\t\t\tif (options.hints & V4MAPPED) {\n\t\t\t\tif ((supportsALL && options.hints & ALL) || filtered.length === 0) {\n\t\t\t\t\tmap4to6(cached);\n\t\t\t\t} else {\n\t\t\t\t\tcached = filtered;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcached = filtered;\n\t\t\t}\n\t\t} else if (options.family === 4) {\n\t\t\tcached = cached.filter(entry => entry.family === 4);\n\t\t}\n\n\t\tif (options.hints & ADDRCONFIG) {\n\t\t\tconst {_iface} = this;\n\t\t\tcached = cached.filter(entry => entry.family === 6 ? _iface.has6 : _iface.has4);\n\t\t}\n\n\t\tif (cached.length === 0) {\n\t\t\tconst error = new Error(`cacheableLookup ENOTFOUND ${hostname}`);\n\t\t\terror.code = 'ENOTFOUND';\n\t\t\terror.hostname = hostname;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (options.all) {\n\t\t\treturn cached;\n\t\t}\n\n\t\treturn cached[0];\n\t}\n\n\tasync query(hostname) {\n\t\tlet cached = await this._cache.get(hostname);\n\n\t\tif (!cached) {\n\t\t\tconst pending = this._pending[hostname];\n\n\t\t\tif (pending) {\n\t\t\t\tcached = await pending;\n\t\t\t} else {\n\t\t\t\tconst newPromise = this.queryAndCache(hostname);\n\t\t\t\tthis._pending[hostname] = newPromise;\n\n\t\t\t\ttry {\n\t\t\t\t\tcached = await newPromise;\n\t\t\t\t} finally {\n\t\t\t\t\tdelete this._pending[hostname];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcached = cached.map(entry => {\n\t\t\treturn {...entry};\n\t\t});\n\n\t\treturn cached;\n\t}\n\n\tasync _resolve(hostname) {\n\t\tconst wrap = async promise => {\n\t\t\ttry {\n\t\t\t\treturn await promise;\n\t\t\t} catch (error) {\n\t\t\t\tif (error.code === 'ENODATA' || error.code === 'ENOTFOUND') {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t};\n\n\t\t// ANY is unsafe as it doesn't trigger new queries in the underlying server.\n\t\tconst [A, AAAA] = await Promise.all([\n\t\t\tthis._resolve4(hostname, ttl),\n\t\t\tthis._resolve6(hostname, ttl)\n\t\t].map(promise => wrap(promise)));\n\n\t\tlet aTtl = 0;\n\t\tlet aaaaTtl = 0;\n\t\tlet cacheTtl = 0;\n\n\t\tconst now = Date.now();\n\n\t\tfor (const entry of A) {\n\t\t\tentry.family = 4;\n\t\t\tentry.expires = now + (entry.ttl * 1000);\n\n\t\t\taTtl = Math.max(aTtl, entry.ttl);\n\t\t}\n\n\t\tfor (const entry of AAAA) {\n\t\t\tentry.family = 6;\n\t\t\tentry.expires = now + (entry.ttl * 1000);\n\n\t\t\taaaaTtl = Math.max(aaaaTtl, entry.ttl);\n\t\t}\n\n\t\tif (A.length > 0) {\n\t\t\tif (AAAA.length > 0) {\n\t\t\t\tcacheTtl = Math.min(aTtl, aaaaTtl);\n\t\t\t} else {\n\t\t\t\tcacheTtl = aTtl;\n\t\t\t}\n\t\t} else {\n\t\t\tcacheTtl = aaaaTtl;\n\t\t}\n\n\t\treturn {\n\t\t\tentries: [\n\t\t\t\t...A,\n\t\t\t\t...AAAA\n\t\t\t],\n\t\t\tcacheTtl\n\t\t};\n\t}\n\n\tasync _lookup(hostname) {\n\t\ttry {\n\t\t\tconst entries = await this._dnsLookup(hostname, {\n\t\t\t\tall: true\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tentries,\n\t\t\t\tcacheTtl: 0\n\t\t\t};\n\t\t} catch (_) {\n\t\t\treturn {\n\t\t\t\tentries: [],\n\t\t\t\tcacheTtl: 0\n\t\t\t};\n\t\t}\n\t}\n\n\tasync _set(hostname, data, cacheTtl) {\n\t\tif (this.maxTtl > 0 && cacheTtl > 0) {\n\t\t\tcacheTtl = Math.min(cacheTtl, this.maxTtl) * 1000;\n\t\t\tdata[kExpires] = Date.now() + cacheTtl;\n\n\t\t\ttry {\n\t\t\t\tawait this._cache.set(hostname, data, cacheTtl);\n\t\t\t} catch (error) {\n\t\t\t\tthis.lookupAsync = async () => {\n\t\t\t\t\tconst cacheError = new Error('Cache Error. Please recreate the CacheableLookup instance.');\n\t\t\t\t\tcacheError.cause = error;\n\n\t\t\t\t\tthrow cacheError;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (isIterable(this._cache)) {\n\t\t\t\tthis._tick(cacheTtl);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync queryAndCache(hostname) {\n\t\tif (this._hostnamesToFallback.has(hostname)) {\n\t\t\treturn this._dnsLookup(hostname, all);\n\t\t}\n\n\t\tlet query = await this._resolve(hostname);\n\n\t\tif (query.entries.length === 0 && this._fallback) {\n\t\t\tquery = await this._lookup(hostname);\n\n\t\t\tif (query.entries.length !== 0) {\n\t\t\t\t// Use `dns.lookup(...)` for that particular hostname\n\t\t\t\tthis._hostnamesToFallback.add(hostname);\n\t\t\t}\n\t\t}\n\n\t\tconst cacheTtl = query.entries.length === 0 ? this.errorTtl : query.cacheTtl;\n\t\tawait this._set(hostname, query.entries, cacheTtl);\n\n\t\treturn query.entries;\n\t}\n\n\t_tick(ms) {\n\t\tconst nextRemovalTime = this._nextRemovalTime;\n\n\t\tif (!nextRemovalTime || ms < nextRemovalTime) {\n\t\t\tclearTimeout(this._removalTimeout);\n\n\t\t\tthis._nextRemovalTime = ms;\n\n\t\t\tthis._removalTimeout = setTimeout(() => {\n\t\t\t\tthis._nextRemovalTime = false;\n\n\t\t\t\tlet nextExpiry = Infinity;\n\n\t\t\t\tconst now = Date.now();\n\n\t\t\t\tfor (const [hostname, entries] of this._cache) {\n\t\t\t\t\tconst expires = entries[kExpires];\n\n\t\t\t\t\tif (now >= expires) {\n\t\t\t\t\t\tthis._cache.delete(hostname);\n\t\t\t\t\t} else if (expires < nextExpiry) {\n\t\t\t\t\t\tnextExpiry = expires;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (nextExpiry !== Infinity) {\n\t\t\t\t\tthis._tick(nextExpiry - now);\n\t\t\t\t}\n\t\t\t}, ms);\n\n\t\t\t/* istanbul ignore next: There is no `timeout.unref()` when running inside an Electron renderer */\n\t\t\tif (this._removalTimeout.unref) {\n\t\t\t\tthis._removalTimeout.unref();\n\t\t\t}\n\t\t}\n\t}\n\n\tinstall(agent) {\n\t\tverifyAgent(agent);\n\n\t\tif (kCacheableLookupCreateConnection in agent) {\n\t\t\tthrow new Error('CacheableLookup has been already installed');\n\t\t}\n\n\t\tagent[kCacheableLookupCreateConnection] = agent.createConnection;\n\t\tagent[kCacheableLookupInstance] = this;\n\n\t\tagent.createConnection = (options, callback) => {\n\t\t\tif (!('lookup' in options)) {\n\t\t\t\toptions.lookup = this.lookup;\n\t\t\t}\n\n\t\t\treturn agent[kCacheableLookupCreateConnection](options, callback);\n\t\t};\n\t}\n\n\tuninstall(agent) {\n\t\tverifyAgent(agent);\n\n\t\tif (agent[kCacheableLookupCreateConnection]) {\n\t\t\tif (agent[kCacheableLookupInstance] !== this) {\n\t\t\t\tthrow new Error('The agent is not owned by this CacheableLookup instance');\n\t\t\t}\n\n\t\t\tagent.createConnection = agent[kCacheableLookupCreateConnection];\n\n\t\t\tdelete agent[kCacheableLookupCreateConnection];\n\t\t\tdelete agent[kCacheableLookupInstance];\n\t\t}\n\t}\n\n\tupdateInterfaceInfo() {\n\t\tconst {_iface} = this;\n\n\t\tthis._iface = getIfaceInfo();\n\n\t\tif ((_iface.has4 && !this._iface.has4) || (_iface.has6 && !this._iface.has6)) {\n\t\t\tthis._cache.clear();\n\t\t}\n\t}\n\n\tclear(hostname) {\n\t\tif (hostname) {\n\t\t\tthis._cache.delete(hostname);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cache.clear();\n\t}\n}\n\nmodule.exports = CacheableLookup;\nmodule.exports.default = CacheableLookup;\n"]},"metadata":{},"sourceType":"script"}