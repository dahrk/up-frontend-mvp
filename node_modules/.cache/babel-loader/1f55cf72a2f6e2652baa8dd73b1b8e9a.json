{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retryAfterStatusCodes = void 0;\nexports.retryAfterStatusCodes = new Set([413, 429, 503]);\n\nconst calculateRetryDelay = ({\n  attemptCount,\n  retryOptions,\n  error,\n  retryAfter\n}) => {\n  if (attemptCount > retryOptions.limit) {\n    return 0;\n  }\n\n  const hasMethod = retryOptions.methods.includes(error.options.method);\n  const hasErrorCode = retryOptions.errorCodes.includes(error.code);\n  const hasStatusCode = error.response && retryOptions.statusCodes.includes(error.response.statusCode);\n\n  if (!hasMethod || !hasErrorCode && !hasStatusCode) {\n    return 0;\n  }\n\n  if (error.response) {\n    if (retryAfter) {\n      if (retryOptions.maxRetryAfter === undefined || retryAfter > retryOptions.maxRetryAfter) {\n        return 0;\n      }\n\n      return retryAfter;\n    }\n\n    if (error.response.statusCode === 413) {\n      return 0;\n    }\n  }\n\n  const noise = Math.random() * 100;\n  return 2 ** (attemptCount - 1) * 1000 + noise;\n};\n\nexports.default = calculateRetryDelay;","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/got/dist/source/core/calculate-retry-delay.js"],"names":["Object","defineProperty","exports","value","retryAfterStatusCodes","Set","calculateRetryDelay","attemptCount","retryOptions","error","retryAfter","limit","hasMethod","methods","includes","options","method","hasErrorCode","errorCodes","code","hasStatusCode","response","statusCodes","statusCode","maxRetryAfter","undefined","noise","Math","random","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;AACAF,OAAO,CAACE,qBAAR,GAAgC,IAAIC,GAAJ,CAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAR,CAAhC;;AACA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA;AAArC,CAAD,KAAuD;AAC/E,MAAIH,YAAY,GAAGC,YAAY,CAACG,KAAhC,EAAuC;AACnC,WAAO,CAAP;AACH;;AACD,QAAMC,SAAS,GAAGJ,YAAY,CAACK,OAAb,CAAqBC,QAArB,CAA8BL,KAAK,CAACM,OAAN,CAAcC,MAA5C,CAAlB;AACA,QAAMC,YAAY,GAAGT,YAAY,CAACU,UAAb,CAAwBJ,QAAxB,CAAiCL,KAAK,CAACU,IAAvC,CAArB;AACA,QAAMC,aAAa,GAAGX,KAAK,CAACY,QAAN,IAAkBb,YAAY,CAACc,WAAb,CAAyBR,QAAzB,CAAkCL,KAAK,CAACY,QAAN,CAAeE,UAAjD,CAAxC;;AACA,MAAI,CAACX,SAAD,IAAe,CAACK,YAAD,IAAiB,CAACG,aAArC,EAAqD;AACjD,WAAO,CAAP;AACH;;AACD,MAAIX,KAAK,CAACY,QAAV,EAAoB;AAChB,QAAIX,UAAJ,EAAgB;AACZ,UAAIF,YAAY,CAACgB,aAAb,KAA+BC,SAA/B,IAA4Cf,UAAU,GAAGF,YAAY,CAACgB,aAA1E,EAAyF;AACrF,eAAO,CAAP;AACH;;AACD,aAAOd,UAAP;AACH;;AACD,QAAID,KAAK,CAACY,QAAN,CAAeE,UAAf,KAA8B,GAAlC,EAAuC;AACnC,aAAO,CAAP;AACH;AACJ;;AACD,QAAMG,KAAK,GAAGC,IAAI,CAACC,MAAL,KAAgB,GAA9B;AACA,SAAS,MAAMrB,YAAY,GAAG,CAArB,CAAD,GAA4B,IAA7B,GAAqCmB,KAA5C;AACH,CAvBD;;AAwBAxB,OAAO,CAAC2B,OAAR,GAAkBvB,mBAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryAfterStatusCodes = void 0;\nexports.retryAfterStatusCodes = new Set([413, 429, 503]);\nconst calculateRetryDelay = ({ attemptCount, retryOptions, error, retryAfter }) => {\n    if (attemptCount > retryOptions.limit) {\n        return 0;\n    }\n    const hasMethod = retryOptions.methods.includes(error.options.method);\n    const hasErrorCode = retryOptions.errorCodes.includes(error.code);\n    const hasStatusCode = error.response && retryOptions.statusCodes.includes(error.response.statusCode);\n    if (!hasMethod || (!hasErrorCode && !hasStatusCode)) {\n        return 0;\n    }\n    if (error.response) {\n        if (retryAfter) {\n            if (retryOptions.maxRetryAfter === undefined || retryAfter > retryOptions.maxRetryAfter) {\n                return 0;\n            }\n            return retryAfter;\n        }\n        if (error.response.statusCode === 413) {\n            return 0;\n        }\n    }\n    const noise = Math.random() * 100;\n    return ((2 ** (attemptCount - 1)) * 1000) + noise;\n};\nexports.default = calculateRetryDelay;\n"]},"metadata":{},"sourceType":"script"}