{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnsupportedProtocolError = exports.ReadError = exports.TimeoutError = exports.UploadError = exports.CacheError = exports.HTTPError = exports.MaxRedirectsError = exports.RequestError = exports.setNonEnumerableProperties = exports.knownHookEvents = exports.withoutBody = exports.kIsNormalizedAlready = void 0;\n\nconst util_1 = require(\"util\");\n\nconst stream_1 = require(\"stream\");\n\nconst fs_1 = require(\"fs\");\n\nconst url_1 = require(\"url\");\n\nconst http = require(\"http\");\n\nconst http_1 = require(\"http\");\n\nconst https = require(\"https\");\n\nconst http_timer_1 = require(\"@szmarczak/http-timer\");\n\nconst cacheable_lookup_1 = require(\"cacheable-lookup\");\n\nconst CacheableRequest = require(\"cacheable-request\");\n\nconst decompressResponse = require(\"decompress-response\"); // @ts-expect-error Missing types\n\n\nconst http2wrapper = require(\"http2-wrapper\");\n\nconst lowercaseKeys = require(\"lowercase-keys\");\n\nconst is_1 = require(\"@sindresorhus/is\");\n\nconst get_body_size_1 = require(\"./utils/get-body-size\");\n\nconst is_form_data_1 = require(\"./utils/is-form-data\");\n\nconst proxy_events_1 = require(\"./utils/proxy-events\");\n\nconst timed_out_1 = require(\"./utils/timed-out\");\n\nconst url_to_options_1 = require(\"./utils/url-to-options\");\n\nconst options_to_url_1 = require(\"./utils/options-to-url\");\n\nconst weakable_map_1 = require(\"./utils/weakable-map\");\n\nconst get_buffer_1 = require(\"./utils/get-buffer\");\n\nconst dns_ip_version_1 = require(\"./utils/dns-ip-version\");\n\nconst is_response_ok_1 = require(\"./utils/is-response-ok\");\n\nconst deprecation_warning_1 = require(\"../utils/deprecation-warning\");\n\nconst normalize_arguments_1 = require(\"../as-promise/normalize-arguments\");\n\nconst calculate_retry_delay_1 = require(\"./calculate-retry-delay\");\n\nlet globalDnsCache;\nconst kRequest = Symbol('request');\nconst kResponse = Symbol('response');\nconst kResponseSize = Symbol('responseSize');\nconst kDownloadedSize = Symbol('downloadedSize');\nconst kBodySize = Symbol('bodySize');\nconst kUploadedSize = Symbol('uploadedSize');\nconst kServerResponsesPiped = Symbol('serverResponsesPiped');\nconst kUnproxyEvents = Symbol('unproxyEvents');\nconst kIsFromCache = Symbol('isFromCache');\nconst kCancelTimeouts = Symbol('cancelTimeouts');\nconst kStartedReading = Symbol('startedReading');\nconst kStopReading = Symbol('stopReading');\nconst kTriggerRead = Symbol('triggerRead');\nconst kBody = Symbol('body');\nconst kJobs = Symbol('jobs');\nconst kOriginalResponse = Symbol('originalResponse');\nconst kRetryTimeout = Symbol('retryTimeout');\nexports.kIsNormalizedAlready = Symbol('isNormalizedAlready');\nconst supportsBrotli = is_1.default.string(process.versions.brotli);\nexports.withoutBody = new Set(['GET', 'HEAD']);\nexports.knownHookEvents = ['init', 'beforeRequest', 'beforeRedirect', 'beforeError', 'beforeRetry', // Promise-Only\n'afterResponse'];\n\nfunction validateSearchParameters(searchParameters) {\n  // eslint-disable-next-line guard-for-in\n  for (const key in searchParameters) {\n    const value = searchParameters[key];\n\n    if (!is_1.default.string(value) && !is_1.default.number(value) && !is_1.default.boolean(value) && !is_1.default.null_(value) && !is_1.default.undefined(value)) {\n      throw new TypeError(`The \\`searchParams\\` value '${String(value)}' must be a string, number, boolean or null`);\n    }\n  }\n}\n\nfunction isClientRequest(clientRequest) {\n  return is_1.default.object(clientRequest) && !('statusCode' in clientRequest);\n}\n\nconst cacheableStore = new weakable_map_1.default();\n\nconst waitForOpenFile = async file => new Promise((resolve, reject) => {\n  const onError = error => {\n    reject(error);\n  }; // Node.js 12 has incomplete types\n\n\n  if (!file.pending) {\n    resolve();\n  }\n\n  file.once('error', onError);\n  file.once('ready', () => {\n    file.off('error', onError);\n    resolve();\n  });\n});\n\nconst redirectCodes = new Set([300, 301, 302, 303, 304, 307, 308]);\nconst nonEnumerableProperties = ['context', 'body', 'json', 'form'];\n\nexports.setNonEnumerableProperties = (sources, to) => {\n  // Non enumerable properties shall not be merged\n  const properties = {};\n\n  for (const source of sources) {\n    if (!source) {\n      continue;\n    }\n\n    for (const name of nonEnumerableProperties) {\n      if (!(name in source)) {\n        continue;\n      }\n\n      properties[name] = {\n        writable: true,\n        configurable: true,\n        enumerable: false,\n        // @ts-expect-error TS doesn't see the check above\n        value: source[name]\n      };\n    }\n  }\n\n  Object.defineProperties(to, properties);\n};\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\n\n\nclass RequestError extends Error {\n  constructor(message, error, self) {\n    var _a;\n\n    super(message);\n    Error.captureStackTrace(this, this.constructor);\n    this.name = 'RequestError';\n    this.code = error.code;\n\n    if (self instanceof Request) {\n      Object.defineProperty(this, 'request', {\n        enumerable: false,\n        value: self\n      });\n      Object.defineProperty(this, 'response', {\n        enumerable: false,\n        value: self[kResponse]\n      });\n      Object.defineProperty(this, 'options', {\n        // This fails because of TS 3.7.2 useDefineForClassFields\n        // Ref: https://github.com/microsoft/TypeScript/issues/34972\n        enumerable: false,\n        value: self.options\n      });\n    } else {\n      Object.defineProperty(this, 'options', {\n        // This fails because of TS 3.7.2 useDefineForClassFields\n        // Ref: https://github.com/microsoft/TypeScript/issues/34972\n        enumerable: false,\n        value: self\n      });\n    }\n\n    this.timings = (_a = this.request) === null || _a === void 0 ? void 0 : _a.timings; // Recover the original stacktrace\n\n    if (is_1.default.string(error.stack) && is_1.default.string(this.stack)) {\n      const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n      const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n      const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse(); // Remove duplicated traces\n\n      while (errorStackTrace.length !== 0 && errorStackTrace[0] === thisStackTrace[0]) {\n        thisStackTrace.shift();\n      }\n\n      this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n    }\n  }\n\n}\n\nexports.RequestError = RequestError;\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\n\nclass MaxRedirectsError extends RequestError {\n  constructor(request) {\n    super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n    this.name = 'MaxRedirectsError';\n  }\n\n}\n\nexports.MaxRedirectsError = MaxRedirectsError;\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\n\nclass HTTPError extends RequestError {\n  constructor(response) {\n    super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n    this.name = 'HTTPError';\n  }\n\n}\n\nexports.HTTPError = HTTPError;\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\n\nclass CacheError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'CacheError';\n  }\n\n}\n\nexports.CacheError = CacheError;\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\n\nclass UploadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'UploadError';\n  }\n\n}\n\nexports.UploadError = UploadError;\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\n\nclass TimeoutError extends RequestError {\n  constructor(error, timings, request) {\n    super(error.message, error, request);\n    this.name = 'TimeoutError';\n    this.event = error.event;\n    this.timings = timings;\n  }\n\n}\n\nexports.TimeoutError = TimeoutError;\n/**\nAn error to be thrown when reading from response stream fails.\n*/\n\nclass ReadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'ReadError';\n  }\n\n}\n\nexports.ReadError = ReadError;\n/**\nAn error to be thrown when given an unsupported protocol.\n*/\n\nclass UnsupportedProtocolError extends RequestError {\n  constructor(options) {\n    super(`Unsupported protocol \"${options.url.protocol}\"`, {}, options);\n    this.name = 'UnsupportedProtocolError';\n  }\n\n}\n\nexports.UnsupportedProtocolError = UnsupportedProtocolError;\nconst proxiedRequestEvents = ['socket', 'connect', 'continue', 'information', 'upgrade', 'timeout'];\n\nclass Request extends stream_1.Duplex {\n  constructor(url, options = {}, defaults) {\n    super({\n      // This must be false, to enable throwing after destroy\n      // It is used for retry logic in Promise API\n      autoDestroy: false,\n      // It needs to be zero because we're just proxying the data to another stream\n      highWaterMark: 0\n    });\n    this[kDownloadedSize] = 0;\n    this[kUploadedSize] = 0;\n    this.requestInitialized = false;\n    this[kServerResponsesPiped] = new Set();\n    this.redirects = [];\n    this[kStopReading] = false;\n    this[kTriggerRead] = false;\n    this[kJobs] = [];\n    this.retryCount = 0; // TODO: Remove this when targeting Node.js >= 12\n\n    this._progressCallbacks = [];\n\n    const unlockWrite = () => this._unlockWrite();\n\n    const lockWrite = () => this._lockWrite();\n\n    this.on('pipe', source => {\n      source.prependListener('data', unlockWrite);\n      source.on('data', lockWrite);\n      source.prependListener('end', unlockWrite);\n      source.on('end', lockWrite);\n    });\n    this.on('unpipe', source => {\n      source.off('data', unlockWrite);\n      source.off('data', lockWrite);\n      source.off('end', unlockWrite);\n      source.off('end', lockWrite);\n    });\n    this.on('pipe', source => {\n      if (source instanceof http_1.IncomingMessage) {\n        this.options.headers = { ...source.headers,\n          ...this.options.headers\n        };\n      }\n    });\n    const {\n      json,\n      body,\n      form\n    } = options;\n\n    if (json || body || form) {\n      this._lockWrite();\n    }\n\n    if (exports.kIsNormalizedAlready in options) {\n      this.options = options;\n    } else {\n      try {\n        // @ts-expect-error Common TypeScript bug saying that `this.constructor` is not accessible\n        this.options = this.constructor.normalizeArguments(url, options, defaults);\n      } catch (error) {\n        // TODO: Move this to `_destroy()`\n        if (is_1.default.nodeStream(options.body)) {\n          options.body.destroy();\n        }\n\n        this.destroy(error);\n        return;\n      }\n    }\n\n    (async () => {\n      var _a;\n\n      try {\n        if (this.options.body instanceof fs_1.ReadStream) {\n          await waitForOpenFile(this.options.body);\n        }\n\n        const {\n          url: normalizedURL\n        } = this.options;\n\n        if (!normalizedURL) {\n          throw new TypeError('Missing `url` property');\n        }\n\n        this.requestUrl = normalizedURL.toString();\n        decodeURI(this.requestUrl);\n        await this._finalizeBody();\n        await this._makeRequest();\n\n        if (this.destroyed) {\n          (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroy();\n          return;\n        } // Queued writes etc.\n\n\n        for (const job of this[kJobs]) {\n          job();\n        } // Prevent memory leak\n\n\n        this[kJobs].length = 0;\n        this.requestInitialized = true;\n      } catch (error) {\n        if (error instanceof RequestError) {\n          this._beforeError(error);\n\n          return;\n        } // This is a workaround for https://github.com/nodejs/node/issues/33335\n\n\n        if (!this.destroyed) {\n          this.destroy(error);\n        }\n      }\n    })();\n  }\n\n  static normalizeArguments(url, options, defaults) {\n    var _a, _b, _c, _d, _e;\n\n    const rawOptions = options;\n\n    if (is_1.default.object(url) && !is_1.default.urlInstance(url)) {\n      options = { ...defaults,\n        ...url,\n        ...options\n      };\n    } else {\n      if (url && options && options.url !== undefined) {\n        throw new TypeError('The `url` option is mutually exclusive with the `input` argument');\n      }\n\n      options = { ...defaults,\n        ...options\n      };\n\n      if (url !== undefined) {\n        options.url = url;\n      }\n\n      if (is_1.default.urlInstance(options.url)) {\n        options.url = new url_1.URL(options.url.toString());\n      }\n    } // TODO: Deprecate URL options in Got 12.\n    // Support extend-specific options\n\n\n    if (options.cache === false) {\n      options.cache = undefined;\n    }\n\n    if (options.dnsCache === false) {\n      options.dnsCache = undefined;\n    } // Nice type assertions\n\n\n    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.method);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.headers);\n    is_1.assert.any([is_1.default.string, is_1.default.urlInstance, is_1.default.undefined], options.prefixUrl);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cookieJar);\n    is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.searchParams);\n    is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.cache);\n    is_1.assert.any([is_1.default.object, is_1.default.number, is_1.default.undefined], options.timeout);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.context);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.hooks);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.decompress);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.ignoreInvalidCookies);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.followRedirect);\n    is_1.assert.any([is_1.default.number, is_1.default.undefined], options.maxRedirects);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.throwHttpErrors);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.http2);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.allowGetBody);\n    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.localAddress);\n    is_1.assert.any([dns_ip_version_1.isDnsLookupIpVersion, is_1.default.undefined], options.dnsLookupIpVersion);\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.https);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.rejectUnauthorized);\n\n    if (options.https) {\n      is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.https.rejectUnauthorized);\n      is_1.assert.any([is_1.default.function_, is_1.default.undefined], options.https.checkServerIdentity);\n      is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificateAuthority);\n      is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.key);\n      is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificate);\n      is_1.assert.any([is_1.default.string, is_1.default.undefined], options.https.passphrase);\n      is_1.assert.any([is_1.default.string, is_1.default.buffer, is_1.default.array, is_1.default.undefined], options.https.pfx);\n    }\n\n    is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cacheOptions); // `options.method`\n\n    if (is_1.default.string(options.method)) {\n      options.method = options.method.toUpperCase();\n    } else {\n      options.method = 'GET';\n    } // `options.headers`\n\n\n    if (options.headers === (defaults === null || defaults === void 0 ? void 0 : defaults.headers)) {\n      options.headers = { ...options.headers\n      };\n    } else {\n      options.headers = lowercaseKeys({ ...(defaults === null || defaults === void 0 ? void 0 : defaults.headers),\n        ...options.headers\n      });\n    } // Disallow legacy `url.Url`\n\n\n    if ('slashes' in options) {\n      throw new TypeError('The legacy `url.Url` has been deprecated. Use `URL` instead.');\n    } // `options.auth`\n\n\n    if ('auth' in options) {\n      throw new TypeError('Parameter `auth` is deprecated. Use `username` / `password` instead.');\n    } // `options.searchParams`\n\n\n    if ('searchParams' in options) {\n      if (options.searchParams && options.searchParams !== (defaults === null || defaults === void 0 ? void 0 : defaults.searchParams)) {\n        let searchParameters;\n\n        if (is_1.default.string(options.searchParams) || options.searchParams instanceof url_1.URLSearchParams) {\n          searchParameters = new url_1.URLSearchParams(options.searchParams);\n        } else {\n          validateSearchParameters(options.searchParams);\n          searchParameters = new url_1.URLSearchParams(); // eslint-disable-next-line guard-for-in\n\n          for (const key in options.searchParams) {\n            const value = options.searchParams[key];\n\n            if (value === null) {\n              searchParameters.append(key, '');\n            } else if (value !== undefined) {\n              searchParameters.append(key, value);\n            }\n          }\n        } // `normalizeArguments()` is also used to merge options\n\n\n        (_a = defaults === null || defaults === void 0 ? void 0 : defaults.searchParams) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => {\n          // Only use default if one isn't already defined\n          if (!searchParameters.has(key)) {\n            searchParameters.append(key, value);\n          }\n        });\n        options.searchParams = searchParameters;\n      }\n    } // `options.username` & `options.password`\n\n\n    options.username = (_b = options.username) !== null && _b !== void 0 ? _b : '';\n    options.password = (_c = options.password) !== null && _c !== void 0 ? _c : ''; // `options.prefixUrl` & `options.url`\n\n    if (is_1.default.undefined(options.prefixUrl)) {\n      options.prefixUrl = (_d = defaults === null || defaults === void 0 ? void 0 : defaults.prefixUrl) !== null && _d !== void 0 ? _d : '';\n    } else {\n      options.prefixUrl = options.prefixUrl.toString();\n\n      if (options.prefixUrl !== '' && !options.prefixUrl.endsWith('/')) {\n        options.prefixUrl += '/';\n      }\n    }\n\n    if (is_1.default.string(options.url)) {\n      if (options.url.startsWith('/')) {\n        throw new Error('`input` must not start with a slash when using `prefixUrl`');\n      }\n\n      options.url = options_to_url_1.default(options.prefixUrl + options.url, options);\n    } else if (is_1.default.undefined(options.url) && options.prefixUrl !== '' || options.protocol) {\n      options.url = options_to_url_1.default(options.prefixUrl, options);\n    }\n\n    if (options.url) {\n      if ('port' in options) {\n        delete options.port;\n      } // Make it possible to change `options.prefixUrl`\n\n\n      let {\n        prefixUrl\n      } = options;\n      Object.defineProperty(options, 'prefixUrl', {\n        set: value => {\n          const url = options.url;\n\n          if (!url.href.startsWith(value)) {\n            throw new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${url.href}`);\n          }\n\n          options.url = new url_1.URL(value + url.href.slice(prefixUrl.length));\n          prefixUrl = value;\n        },\n        get: () => prefixUrl\n      }); // Support UNIX sockets\n\n      let {\n        protocol\n      } = options.url;\n\n      if (protocol === 'unix:') {\n        protocol = 'http:';\n        options.url = new url_1.URL(`http://unix${options.url.pathname}${options.url.search}`);\n      } // Set search params\n\n\n      if (options.searchParams) {\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        options.url.search = options.searchParams.toString();\n      } // Protocol check\n\n\n      if (protocol !== 'http:' && protocol !== 'https:') {\n        throw new UnsupportedProtocolError(options);\n      } // Update `username`\n\n\n      if (options.username === '') {\n        options.username = options.url.username;\n      } else {\n        options.url.username = options.username;\n      } // Update `password`\n\n\n      if (options.password === '') {\n        options.password = options.url.password;\n      } else {\n        options.url.password = options.password;\n      }\n    } // `options.cookieJar`\n\n\n    const {\n      cookieJar\n    } = options;\n\n    if (cookieJar) {\n      let {\n        setCookie,\n        getCookieString\n      } = cookieJar;\n      is_1.assert.function_(setCookie);\n      is_1.assert.function_(getCookieString);\n      /* istanbul ignore next: Horrible `tough-cookie` v3 check */\n\n      if (setCookie.length === 4 && getCookieString.length === 0) {\n        setCookie = util_1.promisify(setCookie.bind(options.cookieJar));\n        getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));\n        options.cookieJar = {\n          setCookie,\n          getCookieString: getCookieString\n        };\n      }\n    } // `options.cache`\n\n\n    const {\n      cache\n    } = options;\n\n    if (cache) {\n      if (!cacheableStore.has(cache)) {\n        cacheableStore.set(cache, new CacheableRequest((requestOptions, handler) => {\n          const result = requestOptions[kRequest](requestOptions, handler); // TODO: remove this when `cacheable-request` supports async request functions.\n\n          if (is_1.default.promise(result)) {\n            // @ts-expect-error\n            // We only need to implement the error handler in order to support HTTP2 caching.\n            // The result will be a promise anyway.\n            result.once = (event, handler) => {\n              if (event === 'error') {\n                result.catch(handler);\n              } else if (event === 'abort') {\n                // The empty catch is needed here in case when\n                // it rejects before it's `await`ed in `_makeRequest`.\n                (async () => {\n                  try {\n                    const request = await result;\n                    request.once('abort', handler);\n                  } catch (_a) {}\n                })();\n              } else {\n                /* istanbul ignore next: safety check */\n                throw new Error(`Unknown HTTP2 promise event: ${event}`);\n              }\n\n              return result;\n            };\n          }\n\n          return result;\n        }, cache));\n      }\n    } // `options.cacheOptions`\n\n\n    options.cacheOptions = { ...options.cacheOptions\n    }; // `options.dnsCache`\n\n    if (options.dnsCache === true) {\n      if (!globalDnsCache) {\n        globalDnsCache = new cacheable_lookup_1.default();\n      }\n\n      options.dnsCache = globalDnsCache;\n    } else if (!is_1.default.undefined(options.dnsCache) && !options.dnsCache.lookup) {\n      throw new TypeError(`Parameter \\`dnsCache\\` must be a CacheableLookup instance or a boolean, got ${is_1.default(options.dnsCache)}`);\n    } // `options.timeout`\n\n\n    if (is_1.default.number(options.timeout)) {\n      options.timeout = {\n        request: options.timeout\n      };\n    } else if (defaults && options.timeout !== defaults.timeout) {\n      options.timeout = { ...defaults.timeout,\n        ...options.timeout\n      };\n    } else {\n      options.timeout = { ...options.timeout\n      };\n    } // `options.context`\n\n\n    if (!options.context) {\n      options.context = {};\n    } // `options.hooks`\n\n\n    const areHooksDefault = options.hooks === (defaults === null || defaults === void 0 ? void 0 : defaults.hooks);\n    options.hooks = { ...options.hooks\n    };\n\n    for (const event of exports.knownHookEvents) {\n      if (event in options.hooks) {\n        if (is_1.default.array(options.hooks[event])) {\n          // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n          options.hooks[event] = [...options.hooks[event]];\n        } else {\n          throw new TypeError(`Parameter \\`${event}\\` must be an Array, got ${is_1.default(options.hooks[event])}`);\n        }\n      } else {\n        options.hooks[event] = [];\n      }\n    }\n\n    if (defaults && !areHooksDefault) {\n      for (const event of exports.knownHookEvents) {\n        const defaultHooks = defaults.hooks[event];\n\n        if (defaultHooks.length > 0) {\n          // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n          options.hooks[event] = [...defaults.hooks[event], ...options.hooks[event]];\n        }\n      }\n    } // DNS options\n\n\n    if ('family' in options) {\n      deprecation_warning_1.default('\"options.family\" was never documented, please use \"options.dnsLookupIpVersion\"');\n    } // HTTPS options\n\n\n    if (defaults === null || defaults === void 0 ? void 0 : defaults.https) {\n      options.https = { ...defaults.https,\n        ...options.https\n      };\n    }\n\n    if ('rejectUnauthorized' in options) {\n      deprecation_warning_1.default('\"options.rejectUnauthorized\" is now deprecated, please use \"options.https.rejectUnauthorized\"');\n    }\n\n    if ('checkServerIdentity' in options) {\n      deprecation_warning_1.default('\"options.checkServerIdentity\" was never documented, please use \"options.https.checkServerIdentity\"');\n    }\n\n    if ('ca' in options) {\n      deprecation_warning_1.default('\"options.ca\" was never documented, please use \"options.https.certificateAuthority\"');\n    }\n\n    if ('key' in options) {\n      deprecation_warning_1.default('\"options.key\" was never documented, please use \"options.https.key\"');\n    }\n\n    if ('cert' in options) {\n      deprecation_warning_1.default('\"options.cert\" was never documented, please use \"options.https.certificate\"');\n    }\n\n    if ('passphrase' in options) {\n      deprecation_warning_1.default('\"options.passphrase\" was never documented, please use \"options.https.passphrase\"');\n    }\n\n    if ('pfx' in options) {\n      deprecation_warning_1.default('\"options.pfx\" was never documented, please use \"options.https.pfx\"');\n    } // Other options\n\n\n    if ('followRedirects' in options) {\n      throw new TypeError('The `followRedirects` option does not exist. Use `followRedirect` instead.');\n    }\n\n    if (options.agent) {\n      for (const key in options.agent) {\n        if (key !== 'http' && key !== 'https' && key !== 'http2') {\n          throw new TypeError(`Expected the \\`options.agent\\` properties to be \\`http\\`, \\`https\\` or \\`http2\\`, got \\`${key}\\``);\n        }\n      }\n    }\n\n    options.maxRedirects = (_e = options.maxRedirects) !== null && _e !== void 0 ? _e : 0; // Set non-enumerable properties\n\n    exports.setNonEnumerableProperties([defaults, rawOptions], options);\n    return normalize_arguments_1.default(options, defaults);\n  }\n\n  _lockWrite() {\n    const onLockedWrite = () => {\n      throw new TypeError('The payload has been already provided');\n    };\n\n    this.write = onLockedWrite;\n    this.end = onLockedWrite;\n  }\n\n  _unlockWrite() {\n    this.write = super.write;\n    this.end = super.end;\n  }\n\n  async _finalizeBody() {\n    const {\n      options\n    } = this;\n    const {\n      headers\n    } = options;\n    const isForm = !is_1.default.undefined(options.form);\n    const isJSON = !is_1.default.undefined(options.json);\n    const isBody = !is_1.default.undefined(options.body);\n    const hasPayload = isForm || isJSON || isBody;\n    const cannotHaveBody = exports.withoutBody.has(options.method) && !(options.method === 'GET' && options.allowGetBody);\n    this._cannotHaveBody = cannotHaveBody;\n\n    if (hasPayload) {\n      if (cannotHaveBody) {\n        throw new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n      }\n\n      if ([isBody, isForm, isJSON].filter(isTrue => isTrue).length > 1) {\n        throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n      }\n\n      if (isBody && !(options.body instanceof stream_1.Readable) && !is_1.default.string(options.body) && !is_1.default.buffer(options.body) && !is_form_data_1.default(options.body)) {\n        throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n      }\n\n      if (isForm && !is_1.default.object(options.form)) {\n        throw new TypeError('The `form` option must be an Object');\n      }\n\n      {\n        // Serialize body\n        const noContentType = !is_1.default.string(headers['content-type']);\n\n        if (isBody) {\n          // Special case for https://github.com/form-data/form-data\n          if (is_form_data_1.default(options.body) && noContentType) {\n            headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n          }\n\n          this[kBody] = options.body;\n        } else if (isForm) {\n          if (noContentType) {\n            headers['content-type'] = 'application/x-www-form-urlencoded';\n          }\n\n          this[kBody] = new url_1.URLSearchParams(options.form).toString();\n        } else {\n          if (noContentType) {\n            headers['content-type'] = 'application/json';\n          }\n\n          this[kBody] = options.stringifyJson(options.json);\n        }\n\n        const uploadBodySize = await get_body_size_1.default(this[kBody], options.headers); // See https://tools.ietf.org/html/rfc7230#section-3.3.2\n        // A user agent SHOULD send a Content-Length in a request message when\n        // no Transfer-Encoding is sent and the request method defines a meaning\n        // for an enclosed payload body.  For example, a Content-Length header\n        // field is normally sent in a POST request even when the value is 0\n        // (indicating an empty payload body).  A user agent SHOULD NOT send a\n        // Content-Length header field when the request message does not contain\n        // a payload body and the method semantics do not anticipate such a\n        // body.\n\n        if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {\n          if (!cannotHaveBody && !is_1.default.undefined(uploadBodySize)) {\n            headers['content-length'] = String(uploadBodySize);\n          }\n        }\n      }\n    } else if (cannotHaveBody) {\n      this._lockWrite();\n    } else {\n      this._unlockWrite();\n    }\n\n    this[kBodySize] = Number(headers['content-length']) || undefined;\n  }\n\n  async _onResponseBase(response) {\n    const {\n      options\n    } = this;\n    const {\n      url\n    } = options;\n    this[kOriginalResponse] = response;\n\n    if (options.decompress) {\n      response = decompressResponse(response);\n    }\n\n    const statusCode = response.statusCode;\n    const typedResponse = response;\n    typedResponse.statusMessage = typedResponse.statusMessage ? typedResponse.statusMessage : http.STATUS_CODES[statusCode];\n    typedResponse.url = options.url.toString();\n    typedResponse.requestUrl = this.requestUrl;\n    typedResponse.redirectUrls = this.redirects;\n    typedResponse.request = this;\n    typedResponse.isFromCache = response.fromCache || false;\n    typedResponse.ip = this.ip;\n    typedResponse.retryCount = this.retryCount;\n    this[kIsFromCache] = typedResponse.isFromCache;\n    this[kResponseSize] = Number(response.headers['content-length']) || undefined;\n    this[kResponse] = response;\n    response.once('end', () => {\n      this[kResponseSize] = this[kDownloadedSize];\n      this.emit('downloadProgress', this.downloadProgress);\n    });\n    response.once('error', error => {\n      // Force clean-up, because some packages don't do this.\n      // TODO: Fix decompress-response\n      response.destroy();\n\n      this._beforeError(new ReadError(error, this));\n    });\n    response.once('aborted', () => {\n      this._beforeError(new ReadError({\n        name: 'Error',\n        message: 'The server aborted pending request',\n        code: 'ECONNRESET'\n      }, this));\n    });\n    this.emit('downloadProgress', this.downloadProgress);\n    const rawCookies = response.headers['set-cookie'];\n\n    if (is_1.default.object(options.cookieJar) && rawCookies) {\n      let promises = rawCookies.map(async rawCookie => options.cookieJar.setCookie(rawCookie, url.toString()));\n\n      if (options.ignoreInvalidCookies) {\n        promises = promises.map(async p => p.catch(() => {}));\n      }\n\n      try {\n        await Promise.all(promises);\n      } catch (error) {\n        this._beforeError(error);\n\n        return;\n      }\n    }\n\n    if (options.followRedirect && response.headers.location && redirectCodes.has(statusCode)) {\n      // We're being redirected, we don't care about the response.\n      // It'd be best to abort the request, but we can't because\n      // we would have to sacrifice the TCP connection. We don't want that.\n      response.resume();\n\n      if (this[kRequest]) {\n        this[kCancelTimeouts](); // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n\n        delete this[kRequest];\n        this[kUnproxyEvents]();\n      }\n\n      const shouldBeGet = statusCode === 303 && options.method !== 'GET' && options.method !== 'HEAD';\n\n      if (shouldBeGet || !options.methodRewriting) {\n        // Server responded with \"see other\", indicating that the resource exists at another location,\n        // and the client should request it from that location via GET or HEAD.\n        options.method = 'GET';\n\n        if ('body' in options) {\n          delete options.body;\n        }\n\n        if ('json' in options) {\n          delete options.json;\n        }\n\n        if ('form' in options) {\n          delete options.form;\n        }\n\n        this[kBody] = undefined;\n        delete options.headers['content-length'];\n      }\n\n      if (this.redirects.length >= options.maxRedirects) {\n        this._beforeError(new MaxRedirectsError(this));\n\n        return;\n      }\n\n      try {\n        // Do not remove. See https://github.com/sindresorhus/got/pull/214\n        const redirectBuffer = Buffer.from(response.headers.location, 'binary').toString(); // Handles invalid URLs. See https://github.com/sindresorhus/got/issues/604\n\n        const redirectUrl = new url_1.URL(redirectBuffer, url);\n        const redirectString = redirectUrl.toString();\n        decodeURI(redirectString); // Redirecting to a different site, clear sensitive data.\n\n        if (redirectUrl.hostname !== url.hostname || redirectUrl.port !== url.port) {\n          if ('host' in options.headers) {\n            delete options.headers.host;\n          }\n\n          if ('cookie' in options.headers) {\n            delete options.headers.cookie;\n          }\n\n          if ('authorization' in options.headers) {\n            delete options.headers.authorization;\n          }\n\n          if (options.username || options.password) {\n            options.username = '';\n            options.password = '';\n          }\n        } else {\n          redirectUrl.username = options.username;\n          redirectUrl.password = options.password;\n        }\n\n        this.redirects.push(redirectString);\n        options.url = redirectUrl;\n\n        for (const hook of options.hooks.beforeRedirect) {\n          // eslint-disable-next-line no-await-in-loop\n          await hook(options, typedResponse);\n        }\n\n        this.emit('redirect', typedResponse, options);\n        await this._makeRequest();\n      } catch (error) {\n        this._beforeError(error);\n\n        return;\n      }\n\n      return;\n    }\n\n    if (options.isStream && options.throwHttpErrors && !is_response_ok_1.isResponseOk(typedResponse)) {\n      this._beforeError(new HTTPError(typedResponse));\n\n      return;\n    }\n\n    response.on('readable', () => {\n      if (this[kTriggerRead]) {\n        this._read();\n      }\n    });\n    this.on('resume', () => {\n      response.resume();\n    });\n    this.on('pause', () => {\n      response.pause();\n    });\n    response.once('end', () => {\n      this.push(null);\n    });\n    this.emit('response', response);\n\n    for (const destination of this[kServerResponsesPiped]) {\n      if (destination.headersSent) {\n        continue;\n      } // eslint-disable-next-line guard-for-in\n\n\n      for (const key in response.headers) {\n        const isAllowed = options.decompress ? key !== 'content-encoding' : true;\n        const value = response.headers[key];\n\n        if (isAllowed) {\n          destination.setHeader(key, value);\n        }\n      }\n\n      destination.statusCode = statusCode;\n    }\n  }\n\n  async _onResponse(response) {\n    try {\n      await this._onResponseBase(response);\n    } catch (error) {\n      /* istanbul ignore next: better safe than sorry */\n      this._beforeError(error);\n    }\n  }\n\n  _onRequest(request) {\n    const {\n      options\n    } = this;\n    const {\n      timeout,\n      url\n    } = options;\n    http_timer_1.default(request);\n    this[kCancelTimeouts] = timed_out_1.default(request, timeout, url);\n    const responseEventName = options.cache ? 'cacheableResponse' : 'response';\n    request.once(responseEventName, response => {\n      void this._onResponse(response);\n    });\n    request.once('error', error => {\n      var _a; // Force clean-up, because some packages (e.g. nock) don't do this.\n\n\n      request.destroy(); // Node.js <= 12.18.2 mistakenly emits the response `end` first.\n\n      (_a = request.res) === null || _a === void 0 ? void 0 : _a.removeAllListeners('end');\n      error = error instanceof timed_out_1.TimeoutError ? new TimeoutError(error, this.timings, this) : new RequestError(error.message, error, this);\n\n      this._beforeError(error);\n    });\n    this[kUnproxyEvents] = proxy_events_1.default(request, this, proxiedRequestEvents);\n    this[kRequest] = request;\n    this.emit('uploadProgress', this.uploadProgress); // Send body\n\n    const body = this[kBody];\n    const currentRequest = this.redirects.length === 0 ? this : request;\n\n    if (is_1.default.nodeStream(body)) {\n      body.pipe(currentRequest);\n      body.once('error', error => {\n        this._beforeError(new UploadError(error, this));\n      });\n    } else {\n      this._unlockWrite();\n\n      if (!is_1.default.undefined(body)) {\n        this._writeRequest(body, undefined, () => {});\n\n        currentRequest.end();\n\n        this._lockWrite();\n      } else if (this._cannotHaveBody || this._noPipe) {\n        currentRequest.end();\n\n        this._lockWrite();\n      }\n    }\n\n    this.emit('request', request);\n  }\n\n  async _createCacheableRequest(url, options) {\n    return new Promise((resolve, reject) => {\n      // TODO: Remove `utils/url-to-options.ts` when `cacheable-request` is fixed\n      Object.assign(options, url_to_options_1.default(url)); // `http-cache-semantics` checks this\n      // TODO: Fix this ignore.\n      // @ts-expect-error\n\n      delete options.url;\n      let request; // This is ugly\n\n      const cacheRequest = cacheableStore.get(options.cache)(options, async response => {\n        // TODO: Fix `cacheable-response`\n        response._readableState.autoDestroy = false;\n\n        if (request) {\n          (await request).emit('cacheableResponse', response);\n        }\n\n        resolve(response);\n      }); // Restore options\n\n      options.url = url;\n      cacheRequest.once('error', reject);\n      cacheRequest.once('request', async requestOrPromise => {\n        request = requestOrPromise;\n        resolve(request);\n      });\n    });\n  }\n\n  async _makeRequest() {\n    var _a, _b, _c, _d, _e;\n\n    const {\n      options\n    } = this;\n    const {\n      headers\n    } = options;\n\n    for (const key in headers) {\n      if (is_1.default.undefined(headers[key])) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete headers[key];\n      } else if (is_1.default.null_(headers[key])) {\n        throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n      }\n    }\n\n    if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {\n      headers['accept-encoding'] = supportsBrotli ? 'gzip, deflate, br' : 'gzip, deflate';\n    } // Set cookies\n\n\n    if (options.cookieJar) {\n      const cookieString = await options.cookieJar.getCookieString(options.url.toString());\n\n      if (is_1.default.nonEmptyString(cookieString)) {\n        options.headers.cookie = cookieString;\n      }\n    }\n\n    for (const hook of options.hooks.beforeRequest) {\n      // eslint-disable-next-line no-await-in-loop\n      const result = await hook(options);\n\n      if (!is_1.default.undefined(result)) {\n        // @ts-expect-error Skip the type mismatch to support abstract responses\n        options.request = () => result;\n\n        break;\n      }\n    }\n\n    if (options.body && this[kBody] !== options.body) {\n      this[kBody] = options.body;\n    }\n\n    const {\n      agent,\n      request,\n      timeout,\n      url\n    } = options;\n\n    if (options.dnsCache && !('lookup' in options)) {\n      options.lookup = options.dnsCache.lookup;\n    } // UNIX sockets\n\n\n    if (url.hostname === 'unix') {\n      const matches = /(?<socketPath>.+?):(?<path>.+)/.exec(`${url.pathname}${url.search}`);\n\n      if (matches === null || matches === void 0 ? void 0 : matches.groups) {\n        const {\n          socketPath,\n          path\n        } = matches.groups;\n        Object.assign(options, {\n          socketPath,\n          path,\n          host: ''\n        });\n      }\n    }\n\n    const isHttps = url.protocol === 'https:'; // Fallback function\n\n    let fallbackFn;\n\n    if (options.http2) {\n      fallbackFn = http2wrapper.auto;\n    } else {\n      fallbackFn = isHttps ? https.request : http.request;\n    }\n\n    const realFn = (_a = options.request) !== null && _a !== void 0 ? _a : fallbackFn; // Cache support\n\n    const fn = options.cache ? this._createCacheableRequest : realFn; // Pass an agent directly when HTTP2 is disabled\n\n    if (agent && !options.http2) {\n      options.agent = agent[isHttps ? 'https' : 'http'];\n    } // Prepare plain HTTP request options\n\n\n    options[kRequest] = realFn;\n    delete options.request; // TODO: Fix this ignore.\n    // @ts-expect-error\n\n    delete options.timeout;\n    const requestOptions = options;\n    requestOptions.shared = (_b = options.cacheOptions) === null || _b === void 0 ? void 0 : _b.shared;\n    requestOptions.cacheHeuristic = (_c = options.cacheOptions) === null || _c === void 0 ? void 0 : _c.cacheHeuristic;\n    requestOptions.immutableMinTimeToLive = (_d = options.cacheOptions) === null || _d === void 0 ? void 0 : _d.immutableMinTimeToLive;\n    requestOptions.ignoreCargoCult = (_e = options.cacheOptions) === null || _e === void 0 ? void 0 : _e.ignoreCargoCult; // If `dnsLookupIpVersion` is not present do not override `family`\n\n    if (options.dnsLookupIpVersion !== undefined) {\n      try {\n        requestOptions.family = dns_ip_version_1.dnsLookupIpVersionToFamily(options.dnsLookupIpVersion);\n      } catch (_f) {\n        throw new Error('Invalid `dnsLookupIpVersion` option value');\n      }\n    } // HTTPS options remapping\n\n\n    if (options.https) {\n      if ('rejectUnauthorized' in options.https) {\n        requestOptions.rejectUnauthorized = options.https.rejectUnauthorized;\n      }\n\n      if (options.https.checkServerIdentity) {\n        requestOptions.checkServerIdentity = options.https.checkServerIdentity;\n      }\n\n      if (options.https.certificateAuthority) {\n        requestOptions.ca = options.https.certificateAuthority;\n      }\n\n      if (options.https.certificate) {\n        requestOptions.cert = options.https.certificate;\n      }\n\n      if (options.https.key) {\n        requestOptions.key = options.https.key;\n      }\n\n      if (options.https.passphrase) {\n        requestOptions.passphrase = options.https.passphrase;\n      }\n\n      if (options.https.pfx) {\n        requestOptions.pfx = options.https.pfx;\n      }\n    }\n\n    try {\n      let requestOrResponse = await fn(url, requestOptions);\n\n      if (is_1.default.undefined(requestOrResponse)) {\n        requestOrResponse = fallbackFn(url, requestOptions);\n      } // Restore options\n\n\n      options.request = request;\n      options.timeout = timeout;\n      options.agent = agent; // HTTPS options restore\n\n      if (options.https) {\n        if ('rejectUnauthorized' in options.https) {\n          delete requestOptions.rejectUnauthorized;\n        }\n\n        if (options.https.checkServerIdentity) {\n          // @ts-expect-error - This one will be removed when we remove the alias.\n          delete requestOptions.checkServerIdentity;\n        }\n\n        if (options.https.certificateAuthority) {\n          delete requestOptions.ca;\n        }\n\n        if (options.https.certificate) {\n          delete requestOptions.cert;\n        }\n\n        if (options.https.key) {\n          delete requestOptions.key;\n        }\n\n        if (options.https.passphrase) {\n          delete requestOptions.passphrase;\n        }\n\n        if (options.https.pfx) {\n          delete requestOptions.pfx;\n        }\n      }\n\n      if (isClientRequest(requestOrResponse)) {\n        this._onRequest(requestOrResponse); // Emit the response after the stream has been ended\n\n      } else if (this.writable) {\n        this.once('finish', () => {\n          void this._onResponse(requestOrResponse);\n        });\n\n        this._unlockWrite();\n\n        this.end();\n\n        this._lockWrite();\n      } else {\n        void this._onResponse(requestOrResponse);\n      }\n    } catch (error) {\n      if (error instanceof CacheableRequest.CacheError) {\n        throw new CacheError(error, this);\n      }\n\n      throw new RequestError(error.message, error, this);\n    }\n  }\n\n  async _error(error) {\n    try {\n      for (const hook of this.options.hooks.beforeError) {\n        // eslint-disable-next-line no-await-in-loop\n        error = await hook(error);\n      }\n    } catch (error_) {\n      error = new RequestError(error_.message, error_, this);\n    }\n\n    this.destroy(error);\n  }\n\n  _beforeError(error) {\n    if (this[kStopReading]) {\n      return;\n    }\n\n    const {\n      options\n    } = this;\n    const retryCount = this.retryCount + 1;\n    this[kStopReading] = true;\n\n    if (!(error instanceof RequestError)) {\n      error = new RequestError(error.message, error, this);\n    }\n\n    const typedError = error;\n    const {\n      response\n    } = typedError;\n    void (async () => {\n      if (response && !response.body) {\n        response.setEncoding(this._readableState.encoding);\n\n        try {\n          response.rawBody = await get_buffer_1.default(response);\n          response.body = response.rawBody.toString();\n        } catch (_a) {}\n      }\n\n      if (this.listenerCount('retry') !== 0) {\n        let backoff;\n\n        try {\n          let retryAfter;\n\n          if (response && 'retry-after' in response.headers) {\n            retryAfter = Number(response.headers['retry-after']);\n\n            if (Number.isNaN(retryAfter)) {\n              retryAfter = Date.parse(response.headers['retry-after']) - Date.now();\n\n              if (retryAfter <= 0) {\n                retryAfter = 1;\n              }\n            } else {\n              retryAfter *= 1000;\n            }\n          }\n\n          backoff = await options.retry.calculateDelay({\n            attemptCount: retryCount,\n            retryOptions: options.retry,\n            error: typedError,\n            retryAfter,\n            computedValue: calculate_retry_delay_1.default({\n              attemptCount: retryCount,\n              retryOptions: options.retry,\n              error: typedError,\n              retryAfter,\n              computedValue: 0\n            })\n          });\n        } catch (error_) {\n          void this._error(new RequestError(error_.message, error_, this));\n          return;\n        }\n\n        if (backoff) {\n          const retry = async () => {\n            try {\n              for (const hook of this.options.hooks.beforeRetry) {\n                // eslint-disable-next-line no-await-in-loop\n                await hook(this.options, typedError, retryCount);\n              }\n            } catch (error_) {\n              void this._error(new RequestError(error_.message, error, this));\n              return;\n            } // Something forced us to abort the retry\n\n\n            if (this.destroyed) {\n              return;\n            }\n\n            this.destroy();\n            this.emit('retry', retryCount, error);\n          };\n\n          this[kRetryTimeout] = setTimeout(retry, backoff);\n          return;\n        }\n      }\n\n      void this._error(typedError);\n    })();\n  }\n\n  _read() {\n    this[kTriggerRead] = true;\n    const response = this[kResponse];\n\n    if (response && !this[kStopReading]) {\n      // We cannot put this in the `if` above\n      // because `.read()` also triggers the `end` event\n      if (response.readableLength) {\n        this[kTriggerRead] = false;\n      }\n\n      let data;\n\n      while ((data = response.read()) !== null) {\n        this[kDownloadedSize] += data.length;\n        this[kStartedReading] = true;\n        const progress = this.downloadProgress;\n\n        if (progress.percent < 1) {\n          this.emit('downloadProgress', progress);\n        }\n\n        this.push(data);\n      }\n    }\n  } // Node.js 12 has incorrect types, so the encoding must be a string\n\n\n  _write(chunk, encoding, callback) {\n    const write = () => {\n      this._writeRequest(chunk, encoding, callback);\n    };\n\n    if (this.requestInitialized) {\n      write();\n    } else {\n      this[kJobs].push(write);\n    }\n  }\n\n  _writeRequest(chunk, encoding, callback) {\n    if (this[kRequest].destroyed) {\n      // Probably the `ClientRequest` instance will throw\n      return;\n    }\n\n    this._progressCallbacks.push(() => {\n      this[kUploadedSize] += Buffer.byteLength(chunk, encoding);\n      const progress = this.uploadProgress;\n\n      if (progress.percent < 1) {\n        this.emit('uploadProgress', progress);\n      }\n    }); // TODO: What happens if it's from cache? Then this[kRequest] won't be defined.\n\n\n    this[kRequest].write(chunk, encoding, error => {\n      if (!error && this._progressCallbacks.length > 0) {\n        this._progressCallbacks.shift()();\n      }\n\n      callback(error);\n    });\n  }\n\n  _final(callback) {\n    const endRequest = () => {\n      // FIX: Node.js 10 calls the write callback AFTER the end callback!\n      while (this._progressCallbacks.length !== 0) {\n        this._progressCallbacks.shift()();\n      } // We need to check if `this[kRequest]` is present,\n      // because it isn't when we use cache.\n\n\n      if (!(kRequest in this)) {\n        callback();\n        return;\n      }\n\n      if (this[kRequest].destroyed) {\n        callback();\n        return;\n      }\n\n      this[kRequest].end(error => {\n        if (!error) {\n          this[kBodySize] = this[kUploadedSize];\n          this.emit('uploadProgress', this.uploadProgress);\n          this[kRequest].emit('upload-complete');\n        }\n\n        callback(error);\n      });\n    };\n\n    if (this.requestInitialized) {\n      endRequest();\n    } else {\n      this[kJobs].push(endRequest);\n    }\n  }\n\n  _destroy(error, callback) {\n    var _a;\n\n    this[kStopReading] = true; // Prevent further retries\n\n    clearTimeout(this[kRetryTimeout]);\n\n    if (kRequest in this) {\n      this[kCancelTimeouts](); // TODO: Remove the next `if` when these get fixed:\n      // - https://github.com/nodejs/node/issues/32851\n\n      if (!((_a = this[kResponse]) === null || _a === void 0 ? void 0 : _a.complete)) {\n        this[kRequest].destroy();\n      }\n    }\n\n    if (error !== null && !is_1.default.undefined(error) && !(error instanceof RequestError)) {\n      error = new RequestError(error.message, error, this);\n    }\n\n    callback(error);\n  }\n\n  get _isAboutToError() {\n    return this[kStopReading];\n  }\n  /**\n  The remote IP address.\n  */\n\n\n  get ip() {\n    var _a;\n\n    return (_a = this.socket) === null || _a === void 0 ? void 0 : _a.remoteAddress;\n  }\n  /**\n  Indicates whether the request has been aborted or not.\n  */\n\n\n  get aborted() {\n    var _a, _b, _c;\n\n    return ((_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroyed) !== null && _b !== void 0 ? _b : this.destroyed) && !((_c = this[kOriginalResponse]) === null || _c === void 0 ? void 0 : _c.complete);\n  }\n\n  get socket() {\n    var _a, _b;\n\n    return (_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.socket) !== null && _b !== void 0 ? _b : undefined;\n  }\n  /**\n  Progress event for downloading (receiving a response).\n  */\n\n\n  get downloadProgress() {\n    let percent;\n\n    if (this[kResponseSize]) {\n      percent = this[kDownloadedSize] / this[kResponseSize];\n    } else if (this[kResponseSize] === this[kDownloadedSize]) {\n      percent = 1;\n    } else {\n      percent = 0;\n    }\n\n    return {\n      percent,\n      transferred: this[kDownloadedSize],\n      total: this[kResponseSize]\n    };\n  }\n  /**\n  Progress event for uploading (sending a request).\n  */\n\n\n  get uploadProgress() {\n    let percent;\n\n    if (this[kBodySize]) {\n      percent = this[kUploadedSize] / this[kBodySize];\n    } else if (this[kBodySize] === this[kUploadedSize]) {\n      percent = 1;\n    } else {\n      percent = 0;\n    }\n\n    return {\n      percent,\n      transferred: this[kUploadedSize],\n      total: this[kBodySize]\n    };\n  }\n  /**\n  The object contains the following properties:\n   - `start` - Time when the request started.\n  - `socket` - Time when a socket was assigned to the request.\n  - `lookup` - Time when the DNS lookup finished.\n  - `connect` - Time when the socket successfully connected.\n  - `secureConnect` - Time when the socket securely connected.\n  - `upload` - Time when the request finished uploading.\n  - `response` - Time when the request fired `response` event.\n  - `end` - Time when the response fired `end` event.\n  - `error` - Time when the request fired `error` event.\n  - `abort` - Time when the request fired `abort` event.\n  - `phases`\n      - `wait` - `timings.socket - timings.start`\n      - `dns` - `timings.lookup - timings.socket`\n      - `tcp` - `timings.connect - timings.lookup`\n      - `tls` - `timings.secureConnect - timings.connect`\n      - `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n      - `firstByte` - `timings.response - timings.upload`\n      - `download` - `timings.end - timings.response`\n      - `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n   If something has not been measured yet, it will be `undefined`.\n   __Note__: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n  */\n\n\n  get timings() {\n    var _a;\n\n    return (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.timings;\n  }\n  /**\n  Whether the response was retrieved from the cache.\n  */\n\n\n  get isFromCache() {\n    return this[kIsFromCache];\n  }\n\n  pipe(destination, options) {\n    if (this[kStartedReading]) {\n      throw new Error('Failed to pipe. The response has been emitted already.');\n    }\n\n    if (destination instanceof http_1.ServerResponse) {\n      this[kServerResponsesPiped].add(destination);\n    }\n\n    return super.pipe(destination, options);\n  }\n\n  unpipe(destination) {\n    if (destination instanceof http_1.ServerResponse) {\n      this[kServerResponsesPiped].delete(destination);\n    }\n\n    super.unpipe(destination);\n    return this;\n  }\n\n}\n\nexports.default = Request;","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/got/dist/source/core/index.js"],"names":["Object","defineProperty","exports","value","UnsupportedProtocolError","ReadError","TimeoutError","UploadError","CacheError","HTTPError","MaxRedirectsError","RequestError","setNonEnumerableProperties","knownHookEvents","withoutBody","kIsNormalizedAlready","util_1","require","stream_1","fs_1","url_1","http","http_1","https","http_timer_1","cacheable_lookup_1","CacheableRequest","decompressResponse","http2wrapper","lowercaseKeys","is_1","get_body_size_1","is_form_data_1","proxy_events_1","timed_out_1","url_to_options_1","options_to_url_1","weakable_map_1","get_buffer_1","dns_ip_version_1","is_response_ok_1","deprecation_warning_1","normalize_arguments_1","calculate_retry_delay_1","globalDnsCache","kRequest","Symbol","kResponse","kResponseSize","kDownloadedSize","kBodySize","kUploadedSize","kServerResponsesPiped","kUnproxyEvents","kIsFromCache","kCancelTimeouts","kStartedReading","kStopReading","kTriggerRead","kBody","kJobs","kOriginalResponse","kRetryTimeout","supportsBrotli","default","string","process","versions","brotli","Set","validateSearchParameters","searchParameters","key","number","boolean","null_","undefined","TypeError","String","isClientRequest","clientRequest","object","cacheableStore","waitForOpenFile","file","Promise","resolve","reject","onError","error","pending","once","off","redirectCodes","nonEnumerableProperties","sources","to","properties","source","name","writable","configurable","enumerable","defineProperties","Error","constructor","message","self","_a","captureStackTrace","code","Request","options","timings","request","stack","indexOfMessage","indexOf","length","thisStackTrace","slice","split","reverse","errorStackTrace","shift","join","maxRedirects","response","statusCode","statusMessage","event","url","protocol","proxiedRequestEvents","Duplex","defaults","autoDestroy","highWaterMark","requestInitialized","redirects","retryCount","_progressCallbacks","unlockWrite","_unlockWrite","lockWrite","_lockWrite","on","prependListener","IncomingMessage","headers","json","body","form","normalizeArguments","nodeStream","destroy","ReadStream","normalizedURL","requestUrl","toString","decodeURI","_finalizeBody","_makeRequest","destroyed","job","_beforeError","_b","_c","_d","_e","rawOptions","urlInstance","URL","cache","dnsCache","assert","any","method","prefixUrl","cookieJar","searchParams","timeout","context","hooks","decompress","ignoreInvalidCookies","followRedirect","throwHttpErrors","http2","allowGetBody","localAddress","isDnsLookupIpVersion","dnsLookupIpVersion","rejectUnauthorized","function_","checkServerIdentity","array","certificateAuthority","certificate","passphrase","buffer","pfx","cacheOptions","toUpperCase","URLSearchParams","append","forEach","has","username","password","endsWith","startsWith","port","set","href","get","pathname","search","setCookie","getCookieString","promisify","bind","requestOptions","handler","result","promise","catch","lookup","areHooksDefault","defaultHooks","agent","onLockedWrite","write","end","isForm","isJSON","isBody","hasPayload","cannotHaveBody","_cannotHaveBody","filter","isTrue","Readable","noContentType","getBoundary","stringifyJson","uploadBodySize","Number","_onResponseBase","typedResponse","STATUS_CODES","redirectUrls","isFromCache","fromCache","ip","emit","downloadProgress","rawCookies","promises","map","rawCookie","p","all","location","resume","shouldBeGet","methodRewriting","redirectBuffer","Buffer","from","redirectUrl","redirectString","hostname","host","cookie","authorization","push","hook","beforeRedirect","isStream","isResponseOk","_read","pause","destination","headersSent","isAllowed","setHeader","_onResponse","_onRequest","responseEventName","res","removeAllListeners","uploadProgress","currentRequest","pipe","_writeRequest","_noPipe","_createCacheableRequest","assign","cacheRequest","_readableState","requestOrPromise","cookieString","nonEmptyString","beforeRequest","matches","exec","groups","socketPath","path","isHttps","fallbackFn","auto","realFn","fn","shared","cacheHeuristic","immutableMinTimeToLive","ignoreCargoCult","family","dnsLookupIpVersionToFamily","_f","ca","cert","requestOrResponse","_error","beforeError","error_","typedError","setEncoding","encoding","rawBody","listenerCount","backoff","retryAfter","isNaN","Date","parse","now","retry","calculateDelay","attemptCount","retryOptions","computedValue","beforeRetry","setTimeout","readableLength","data","read","progress","percent","_write","chunk","callback","byteLength","_final","endRequest","_destroy","clearTimeout","complete","_isAboutToError","socket","remoteAddress","aborted","transferred","total","ServerResponse","add","unpipe","delete"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedProtocolError = exports.ReadError = exports.TimeoutError = exports.UploadError = exports.CacheError = exports.HTTPError = exports.MaxRedirectsError = exports.RequestError = exports.setNonEnumerableProperties = exports.knownHookEvents = exports.withoutBody = exports.kIsNormalizedAlready = void 0;\nconst util_1 = require(\"util\");\nconst stream_1 = require(\"stream\");\nconst fs_1 = require(\"fs\");\nconst url_1 = require(\"url\");\nconst http = require(\"http\");\nconst http_1 = require(\"http\");\nconst https = require(\"https\");\nconst http_timer_1 = require(\"@szmarczak/http-timer\");\nconst cacheable_lookup_1 = require(\"cacheable-lookup\");\nconst CacheableRequest = require(\"cacheable-request\");\nconst decompressResponse = require(\"decompress-response\");\n// @ts-expect-error Missing types\nconst http2wrapper = require(\"http2-wrapper\");\nconst lowercaseKeys = require(\"lowercase-keys\");\nconst is_1 = require(\"@sindresorhus/is\");\nconst get_body_size_1 = require(\"./utils/get-body-size\");\nconst is_form_data_1 = require(\"./utils/is-form-data\");\nconst proxy_events_1 = require(\"./utils/proxy-events\");\nconst timed_out_1 = require(\"./utils/timed-out\");\nconst url_to_options_1 = require(\"./utils/url-to-options\");\nconst options_to_url_1 = require(\"./utils/options-to-url\");\nconst weakable_map_1 = require(\"./utils/weakable-map\");\nconst get_buffer_1 = require(\"./utils/get-buffer\");\nconst dns_ip_version_1 = require(\"./utils/dns-ip-version\");\nconst is_response_ok_1 = require(\"./utils/is-response-ok\");\nconst deprecation_warning_1 = require(\"../utils/deprecation-warning\");\nconst normalize_arguments_1 = require(\"../as-promise/normalize-arguments\");\nconst calculate_retry_delay_1 = require(\"./calculate-retry-delay\");\nlet globalDnsCache;\nconst kRequest = Symbol('request');\nconst kResponse = Symbol('response');\nconst kResponseSize = Symbol('responseSize');\nconst kDownloadedSize = Symbol('downloadedSize');\nconst kBodySize = Symbol('bodySize');\nconst kUploadedSize = Symbol('uploadedSize');\nconst kServerResponsesPiped = Symbol('serverResponsesPiped');\nconst kUnproxyEvents = Symbol('unproxyEvents');\nconst kIsFromCache = Symbol('isFromCache');\nconst kCancelTimeouts = Symbol('cancelTimeouts');\nconst kStartedReading = Symbol('startedReading');\nconst kStopReading = Symbol('stopReading');\nconst kTriggerRead = Symbol('triggerRead');\nconst kBody = Symbol('body');\nconst kJobs = Symbol('jobs');\nconst kOriginalResponse = Symbol('originalResponse');\nconst kRetryTimeout = Symbol('retryTimeout');\nexports.kIsNormalizedAlready = Symbol('isNormalizedAlready');\nconst supportsBrotli = is_1.default.string(process.versions.brotli);\nexports.withoutBody = new Set(['GET', 'HEAD']);\nexports.knownHookEvents = [\n    'init',\n    'beforeRequest',\n    'beforeRedirect',\n    'beforeError',\n    'beforeRetry',\n    // Promise-Only\n    'afterResponse'\n];\nfunction validateSearchParameters(searchParameters) {\n    // eslint-disable-next-line guard-for-in\n    for (const key in searchParameters) {\n        const value = searchParameters[key];\n        if (!is_1.default.string(value) && !is_1.default.number(value) && !is_1.default.boolean(value) && !is_1.default.null_(value) && !is_1.default.undefined(value)) {\n            throw new TypeError(`The \\`searchParams\\` value '${String(value)}' must be a string, number, boolean or null`);\n        }\n    }\n}\nfunction isClientRequest(clientRequest) {\n    return is_1.default.object(clientRequest) && !('statusCode' in clientRequest);\n}\nconst cacheableStore = new weakable_map_1.default();\nconst waitForOpenFile = async (file) => new Promise((resolve, reject) => {\n    const onError = (error) => {\n        reject(error);\n    };\n    // Node.js 12 has incomplete types\n    if (!file.pending) {\n        resolve();\n    }\n    file.once('error', onError);\n    file.once('ready', () => {\n        file.off('error', onError);\n        resolve();\n    });\n});\nconst redirectCodes = new Set([300, 301, 302, 303, 304, 307, 308]);\nconst nonEnumerableProperties = [\n    'context',\n    'body',\n    'json',\n    'form'\n];\nexports.setNonEnumerableProperties = (sources, to) => {\n    // Non enumerable properties shall not be merged\n    const properties = {};\n    for (const source of sources) {\n        if (!source) {\n            continue;\n        }\n        for (const name of nonEnumerableProperties) {\n            if (!(name in source)) {\n                continue;\n            }\n            properties[name] = {\n                writable: true,\n                configurable: true,\n                enumerable: false,\n                // @ts-expect-error TS doesn't see the check above\n                value: source[name]\n            };\n        }\n    }\n    Object.defineProperties(to, properties);\n};\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\nclass RequestError extends Error {\n    constructor(message, error, self) {\n        var _a;\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = 'RequestError';\n        this.code = error.code;\n        if (self instanceof Request) {\n            Object.defineProperty(this, 'request', {\n                enumerable: false,\n                value: self\n            });\n            Object.defineProperty(this, 'response', {\n                enumerable: false,\n                value: self[kResponse]\n            });\n            Object.defineProperty(this, 'options', {\n                // This fails because of TS 3.7.2 useDefineForClassFields\n                // Ref: https://github.com/microsoft/TypeScript/issues/34972\n                enumerable: false,\n                value: self.options\n            });\n        }\n        else {\n            Object.defineProperty(this, 'options', {\n                // This fails because of TS 3.7.2 useDefineForClassFields\n                // Ref: https://github.com/microsoft/TypeScript/issues/34972\n                enumerable: false,\n                value: self\n            });\n        }\n        this.timings = (_a = this.request) === null || _a === void 0 ? void 0 : _a.timings;\n        // Recover the original stacktrace\n        if (is_1.default.string(error.stack) && is_1.default.string(this.stack)) {\n            const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n            const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n            const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse();\n            // Remove duplicated traces\n            while (errorStackTrace.length !== 0 && errorStackTrace[0] === thisStackTrace[0]) {\n                thisStackTrace.shift();\n            }\n            this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n        }\n    }\n}\nexports.RequestError = RequestError;\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\nclass MaxRedirectsError extends RequestError {\n    constructor(request) {\n        super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n        this.name = 'MaxRedirectsError';\n    }\n}\nexports.MaxRedirectsError = MaxRedirectsError;\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\nclass HTTPError extends RequestError {\n    constructor(response) {\n        super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n        this.name = 'HTTPError';\n    }\n}\nexports.HTTPError = HTTPError;\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\nclass CacheError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'CacheError';\n    }\n}\nexports.CacheError = CacheError;\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\nclass UploadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'UploadError';\n    }\n}\nexports.UploadError = UploadError;\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\nclass TimeoutError extends RequestError {\n    constructor(error, timings, request) {\n        super(error.message, error, request);\n        this.name = 'TimeoutError';\n        this.event = error.event;\n        this.timings = timings;\n    }\n}\nexports.TimeoutError = TimeoutError;\n/**\nAn error to be thrown when reading from response stream fails.\n*/\nclass ReadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'ReadError';\n    }\n}\nexports.ReadError = ReadError;\n/**\nAn error to be thrown when given an unsupported protocol.\n*/\nclass UnsupportedProtocolError extends RequestError {\n    constructor(options) {\n        super(`Unsupported protocol \"${options.url.protocol}\"`, {}, options);\n        this.name = 'UnsupportedProtocolError';\n    }\n}\nexports.UnsupportedProtocolError = UnsupportedProtocolError;\nconst proxiedRequestEvents = [\n    'socket',\n    'connect',\n    'continue',\n    'information',\n    'upgrade',\n    'timeout'\n];\nclass Request extends stream_1.Duplex {\n    constructor(url, options = {}, defaults) {\n        super({\n            // This must be false, to enable throwing after destroy\n            // It is used for retry logic in Promise API\n            autoDestroy: false,\n            // It needs to be zero because we're just proxying the data to another stream\n            highWaterMark: 0\n        });\n        this[kDownloadedSize] = 0;\n        this[kUploadedSize] = 0;\n        this.requestInitialized = false;\n        this[kServerResponsesPiped] = new Set();\n        this.redirects = [];\n        this[kStopReading] = false;\n        this[kTriggerRead] = false;\n        this[kJobs] = [];\n        this.retryCount = 0;\n        // TODO: Remove this when targeting Node.js >= 12\n        this._progressCallbacks = [];\n        const unlockWrite = () => this._unlockWrite();\n        const lockWrite = () => this._lockWrite();\n        this.on('pipe', (source) => {\n            source.prependListener('data', unlockWrite);\n            source.on('data', lockWrite);\n            source.prependListener('end', unlockWrite);\n            source.on('end', lockWrite);\n        });\n        this.on('unpipe', (source) => {\n            source.off('data', unlockWrite);\n            source.off('data', lockWrite);\n            source.off('end', unlockWrite);\n            source.off('end', lockWrite);\n        });\n        this.on('pipe', source => {\n            if (source instanceof http_1.IncomingMessage) {\n                this.options.headers = {\n                    ...source.headers,\n                    ...this.options.headers\n                };\n            }\n        });\n        const { json, body, form } = options;\n        if (json || body || form) {\n            this._lockWrite();\n        }\n        if (exports.kIsNormalizedAlready in options) {\n            this.options = options;\n        }\n        else {\n            try {\n                // @ts-expect-error Common TypeScript bug saying that `this.constructor` is not accessible\n                this.options = this.constructor.normalizeArguments(url, options, defaults);\n            }\n            catch (error) {\n                // TODO: Move this to `_destroy()`\n                if (is_1.default.nodeStream(options.body)) {\n                    options.body.destroy();\n                }\n                this.destroy(error);\n                return;\n            }\n        }\n        (async () => {\n            var _a;\n            try {\n                if (this.options.body instanceof fs_1.ReadStream) {\n                    await waitForOpenFile(this.options.body);\n                }\n                const { url: normalizedURL } = this.options;\n                if (!normalizedURL) {\n                    throw new TypeError('Missing `url` property');\n                }\n                this.requestUrl = normalizedURL.toString();\n                decodeURI(this.requestUrl);\n                await this._finalizeBody();\n                await this._makeRequest();\n                if (this.destroyed) {\n                    (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroy();\n                    return;\n                }\n                // Queued writes etc.\n                for (const job of this[kJobs]) {\n                    job();\n                }\n                // Prevent memory leak\n                this[kJobs].length = 0;\n                this.requestInitialized = true;\n            }\n            catch (error) {\n                if (error instanceof RequestError) {\n                    this._beforeError(error);\n                    return;\n                }\n                // This is a workaround for https://github.com/nodejs/node/issues/33335\n                if (!this.destroyed) {\n                    this.destroy(error);\n                }\n            }\n        })();\n    }\n    static normalizeArguments(url, options, defaults) {\n        var _a, _b, _c, _d, _e;\n        const rawOptions = options;\n        if (is_1.default.object(url) && !is_1.default.urlInstance(url)) {\n            options = { ...defaults, ...url, ...options };\n        }\n        else {\n            if (url && options && options.url !== undefined) {\n                throw new TypeError('The `url` option is mutually exclusive with the `input` argument');\n            }\n            options = { ...defaults, ...options };\n            if (url !== undefined) {\n                options.url = url;\n            }\n            if (is_1.default.urlInstance(options.url)) {\n                options.url = new url_1.URL(options.url.toString());\n            }\n        }\n        // TODO: Deprecate URL options in Got 12.\n        // Support extend-specific options\n        if (options.cache === false) {\n            options.cache = undefined;\n        }\n        if (options.dnsCache === false) {\n            options.dnsCache = undefined;\n        }\n        // Nice type assertions\n        is_1.assert.any([is_1.default.string, is_1.default.undefined], options.method);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.headers);\n        is_1.assert.any([is_1.default.string, is_1.default.urlInstance, is_1.default.undefined], options.prefixUrl);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cookieJar);\n        is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.searchParams);\n        is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.cache);\n        is_1.assert.any([is_1.default.object, is_1.default.number, is_1.default.undefined], options.timeout);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.context);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.hooks);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.decompress);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.ignoreInvalidCookies);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.followRedirect);\n        is_1.assert.any([is_1.default.number, is_1.default.undefined], options.maxRedirects);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.throwHttpErrors);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.http2);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.allowGetBody);\n        is_1.assert.any([is_1.default.string, is_1.default.undefined], options.localAddress);\n        is_1.assert.any([dns_ip_version_1.isDnsLookupIpVersion, is_1.default.undefined], options.dnsLookupIpVersion);\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.https);\n        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.rejectUnauthorized);\n        if (options.https) {\n            is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.https.rejectUnauthorized);\n            is_1.assert.any([is_1.default.function_, is_1.default.undefined], options.https.checkServerIdentity);\n            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificateAuthority);\n            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.key);\n            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificate);\n            is_1.assert.any([is_1.default.string, is_1.default.undefined], options.https.passphrase);\n            is_1.assert.any([is_1.default.string, is_1.default.buffer, is_1.default.array, is_1.default.undefined], options.https.pfx);\n        }\n        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cacheOptions);\n        // `options.method`\n        if (is_1.default.string(options.method)) {\n            options.method = options.method.toUpperCase();\n        }\n        else {\n            options.method = 'GET';\n        }\n        // `options.headers`\n        if (options.headers === (defaults === null || defaults === void 0 ? void 0 : defaults.headers)) {\n            options.headers = { ...options.headers };\n        }\n        else {\n            options.headers = lowercaseKeys({ ...(defaults === null || defaults === void 0 ? void 0 : defaults.headers), ...options.headers });\n        }\n        // Disallow legacy `url.Url`\n        if ('slashes' in options) {\n            throw new TypeError('The legacy `url.Url` has been deprecated. Use `URL` instead.');\n        }\n        // `options.auth`\n        if ('auth' in options) {\n            throw new TypeError('Parameter `auth` is deprecated. Use `username` / `password` instead.');\n        }\n        // `options.searchParams`\n        if ('searchParams' in options) {\n            if (options.searchParams && options.searchParams !== (defaults === null || defaults === void 0 ? void 0 : defaults.searchParams)) {\n                let searchParameters;\n                if (is_1.default.string(options.searchParams) || (options.searchParams instanceof url_1.URLSearchParams)) {\n                    searchParameters = new url_1.URLSearchParams(options.searchParams);\n                }\n                else {\n                    validateSearchParameters(options.searchParams);\n                    searchParameters = new url_1.URLSearchParams();\n                    // eslint-disable-next-line guard-for-in\n                    for (const key in options.searchParams) {\n                        const value = options.searchParams[key];\n                        if (value === null) {\n                            searchParameters.append(key, '');\n                        }\n                        else if (value !== undefined) {\n                            searchParameters.append(key, value);\n                        }\n                    }\n                }\n                // `normalizeArguments()` is also used to merge options\n                (_a = defaults === null || defaults === void 0 ? void 0 : defaults.searchParams) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => {\n                    // Only use default if one isn't already defined\n                    if (!searchParameters.has(key)) {\n                        searchParameters.append(key, value);\n                    }\n                });\n                options.searchParams = searchParameters;\n            }\n        }\n        // `options.username` & `options.password`\n        options.username = (_b = options.username) !== null && _b !== void 0 ? _b : '';\n        options.password = (_c = options.password) !== null && _c !== void 0 ? _c : '';\n        // `options.prefixUrl` & `options.url`\n        if (is_1.default.undefined(options.prefixUrl)) {\n            options.prefixUrl = (_d = defaults === null || defaults === void 0 ? void 0 : defaults.prefixUrl) !== null && _d !== void 0 ? _d : '';\n        }\n        else {\n            options.prefixUrl = options.prefixUrl.toString();\n            if (options.prefixUrl !== '' && !options.prefixUrl.endsWith('/')) {\n                options.prefixUrl += '/';\n            }\n        }\n        if (is_1.default.string(options.url)) {\n            if (options.url.startsWith('/')) {\n                throw new Error('`input` must not start with a slash when using `prefixUrl`');\n            }\n            options.url = options_to_url_1.default(options.prefixUrl + options.url, options);\n        }\n        else if ((is_1.default.undefined(options.url) && options.prefixUrl !== '') || options.protocol) {\n            options.url = options_to_url_1.default(options.prefixUrl, options);\n        }\n        if (options.url) {\n            if ('port' in options) {\n                delete options.port;\n            }\n            // Make it possible to change `options.prefixUrl`\n            let { prefixUrl } = options;\n            Object.defineProperty(options, 'prefixUrl', {\n                set: (value) => {\n                    const url = options.url;\n                    if (!url.href.startsWith(value)) {\n                        throw new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${url.href}`);\n                    }\n                    options.url = new url_1.URL(value + url.href.slice(prefixUrl.length));\n                    prefixUrl = value;\n                },\n                get: () => prefixUrl\n            });\n            // Support UNIX sockets\n            let { protocol } = options.url;\n            if (protocol === 'unix:') {\n                protocol = 'http:';\n                options.url = new url_1.URL(`http://unix${options.url.pathname}${options.url.search}`);\n            }\n            // Set search params\n            if (options.searchParams) {\n                // eslint-disable-next-line @typescript-eslint/no-base-to-string\n                options.url.search = options.searchParams.toString();\n            }\n            // Protocol check\n            if (protocol !== 'http:' && protocol !== 'https:') {\n                throw new UnsupportedProtocolError(options);\n            }\n            // Update `username`\n            if (options.username === '') {\n                options.username = options.url.username;\n            }\n            else {\n                options.url.username = options.username;\n            }\n            // Update `password`\n            if (options.password === '') {\n                options.password = options.url.password;\n            }\n            else {\n                options.url.password = options.password;\n            }\n        }\n        // `options.cookieJar`\n        const { cookieJar } = options;\n        if (cookieJar) {\n            let { setCookie, getCookieString } = cookieJar;\n            is_1.assert.function_(setCookie);\n            is_1.assert.function_(getCookieString);\n            /* istanbul ignore next: Horrible `tough-cookie` v3 check */\n            if (setCookie.length === 4 && getCookieString.length === 0) {\n                setCookie = util_1.promisify(setCookie.bind(options.cookieJar));\n                getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));\n                options.cookieJar = {\n                    setCookie,\n                    getCookieString: getCookieString\n                };\n            }\n        }\n        // `options.cache`\n        const { cache } = options;\n        if (cache) {\n            if (!cacheableStore.has(cache)) {\n                cacheableStore.set(cache, new CacheableRequest(((requestOptions, handler) => {\n                    const result = requestOptions[kRequest](requestOptions, handler);\n                    // TODO: remove this when `cacheable-request` supports async request functions.\n                    if (is_1.default.promise(result)) {\n                        // @ts-expect-error\n                        // We only need to implement the error handler in order to support HTTP2 caching.\n                        // The result will be a promise anyway.\n                        result.once = (event, handler) => {\n                            if (event === 'error') {\n                                result.catch(handler);\n                            }\n                            else if (event === 'abort') {\n                                // The empty catch is needed here in case when\n                                // it rejects before it's `await`ed in `_makeRequest`.\n                                (async () => {\n                                    try {\n                                        const request = (await result);\n                                        request.once('abort', handler);\n                                    }\n                                    catch (_a) { }\n                                })();\n                            }\n                            else {\n                                /* istanbul ignore next: safety check */\n                                throw new Error(`Unknown HTTP2 promise event: ${event}`);\n                            }\n                            return result;\n                        };\n                    }\n                    return result;\n                }), cache));\n            }\n        }\n        // `options.cacheOptions`\n        options.cacheOptions = { ...options.cacheOptions };\n        // `options.dnsCache`\n        if (options.dnsCache === true) {\n            if (!globalDnsCache) {\n                globalDnsCache = new cacheable_lookup_1.default();\n            }\n            options.dnsCache = globalDnsCache;\n        }\n        else if (!is_1.default.undefined(options.dnsCache) && !options.dnsCache.lookup) {\n            throw new TypeError(`Parameter \\`dnsCache\\` must be a CacheableLookup instance or a boolean, got ${is_1.default(options.dnsCache)}`);\n        }\n        // `options.timeout`\n        if (is_1.default.number(options.timeout)) {\n            options.timeout = { request: options.timeout };\n        }\n        else if (defaults && options.timeout !== defaults.timeout) {\n            options.timeout = {\n                ...defaults.timeout,\n                ...options.timeout\n            };\n        }\n        else {\n            options.timeout = { ...options.timeout };\n        }\n        // `options.context`\n        if (!options.context) {\n            options.context = {};\n        }\n        // `options.hooks`\n        const areHooksDefault = options.hooks === (defaults === null || defaults === void 0 ? void 0 : defaults.hooks);\n        options.hooks = { ...options.hooks };\n        for (const event of exports.knownHookEvents) {\n            if (event in options.hooks) {\n                if (is_1.default.array(options.hooks[event])) {\n                    // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n                    options.hooks[event] = [...options.hooks[event]];\n                }\n                else {\n                    throw new TypeError(`Parameter \\`${event}\\` must be an Array, got ${is_1.default(options.hooks[event])}`);\n                }\n            }\n            else {\n                options.hooks[event] = [];\n            }\n        }\n        if (defaults && !areHooksDefault) {\n            for (const event of exports.knownHookEvents) {\n                const defaultHooks = defaults.hooks[event];\n                if (defaultHooks.length > 0) {\n                    // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044\n                    options.hooks[event] = [\n                        ...defaults.hooks[event],\n                        ...options.hooks[event]\n                    ];\n                }\n            }\n        }\n        // DNS options\n        if ('family' in options) {\n            deprecation_warning_1.default('\"options.family\" was never documented, please use \"options.dnsLookupIpVersion\"');\n        }\n        // HTTPS options\n        if (defaults === null || defaults === void 0 ? void 0 : defaults.https) {\n            options.https = { ...defaults.https, ...options.https };\n        }\n        if ('rejectUnauthorized' in options) {\n            deprecation_warning_1.default('\"options.rejectUnauthorized\" is now deprecated, please use \"options.https.rejectUnauthorized\"');\n        }\n        if ('checkServerIdentity' in options) {\n            deprecation_warning_1.default('\"options.checkServerIdentity\" was never documented, please use \"options.https.checkServerIdentity\"');\n        }\n        if ('ca' in options) {\n            deprecation_warning_1.default('\"options.ca\" was never documented, please use \"options.https.certificateAuthority\"');\n        }\n        if ('key' in options) {\n            deprecation_warning_1.default('\"options.key\" was never documented, please use \"options.https.key\"');\n        }\n        if ('cert' in options) {\n            deprecation_warning_1.default('\"options.cert\" was never documented, please use \"options.https.certificate\"');\n        }\n        if ('passphrase' in options) {\n            deprecation_warning_1.default('\"options.passphrase\" was never documented, please use \"options.https.passphrase\"');\n        }\n        if ('pfx' in options) {\n            deprecation_warning_1.default('\"options.pfx\" was never documented, please use \"options.https.pfx\"');\n        }\n        // Other options\n        if ('followRedirects' in options) {\n            throw new TypeError('The `followRedirects` option does not exist. Use `followRedirect` instead.');\n        }\n        if (options.agent) {\n            for (const key in options.agent) {\n                if (key !== 'http' && key !== 'https' && key !== 'http2') {\n                    throw new TypeError(`Expected the \\`options.agent\\` properties to be \\`http\\`, \\`https\\` or \\`http2\\`, got \\`${key}\\``);\n                }\n            }\n        }\n        options.maxRedirects = (_e = options.maxRedirects) !== null && _e !== void 0 ? _e : 0;\n        // Set non-enumerable properties\n        exports.setNonEnumerableProperties([defaults, rawOptions], options);\n        return normalize_arguments_1.default(options, defaults);\n    }\n    _lockWrite() {\n        const onLockedWrite = () => {\n            throw new TypeError('The payload has been already provided');\n        };\n        this.write = onLockedWrite;\n        this.end = onLockedWrite;\n    }\n    _unlockWrite() {\n        this.write = super.write;\n        this.end = super.end;\n    }\n    async _finalizeBody() {\n        const { options } = this;\n        const { headers } = options;\n        const isForm = !is_1.default.undefined(options.form);\n        const isJSON = !is_1.default.undefined(options.json);\n        const isBody = !is_1.default.undefined(options.body);\n        const hasPayload = isForm || isJSON || isBody;\n        const cannotHaveBody = exports.withoutBody.has(options.method) && !(options.method === 'GET' && options.allowGetBody);\n        this._cannotHaveBody = cannotHaveBody;\n        if (hasPayload) {\n            if (cannotHaveBody) {\n                throw new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n            }\n            if ([isBody, isForm, isJSON].filter(isTrue => isTrue).length > 1) {\n                throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n            }\n            if (isBody &&\n                !(options.body instanceof stream_1.Readable) &&\n                !is_1.default.string(options.body) &&\n                !is_1.default.buffer(options.body) &&\n                !is_form_data_1.default(options.body)) {\n                throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n            }\n            if (isForm && !is_1.default.object(options.form)) {\n                throw new TypeError('The `form` option must be an Object');\n            }\n            {\n                // Serialize body\n                const noContentType = !is_1.default.string(headers['content-type']);\n                if (isBody) {\n                    // Special case for https://github.com/form-data/form-data\n                    if (is_form_data_1.default(options.body) && noContentType) {\n                        headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n                    }\n                    this[kBody] = options.body;\n                }\n                else if (isForm) {\n                    if (noContentType) {\n                        headers['content-type'] = 'application/x-www-form-urlencoded';\n                    }\n                    this[kBody] = (new url_1.URLSearchParams(options.form)).toString();\n                }\n                else {\n                    if (noContentType) {\n                        headers['content-type'] = 'application/json';\n                    }\n                    this[kBody] = options.stringifyJson(options.json);\n                }\n                const uploadBodySize = await get_body_size_1.default(this[kBody], options.headers);\n                // See https://tools.ietf.org/html/rfc7230#section-3.3.2\n                // A user agent SHOULD send a Content-Length in a request message when\n                // no Transfer-Encoding is sent and the request method defines a meaning\n                // for an enclosed payload body.  For example, a Content-Length header\n                // field is normally sent in a POST request even when the value is 0\n                // (indicating an empty payload body).  A user agent SHOULD NOT send a\n                // Content-Length header field when the request message does not contain\n                // a payload body and the method semantics do not anticipate such a\n                // body.\n                if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {\n                    if (!cannotHaveBody && !is_1.default.undefined(uploadBodySize)) {\n                        headers['content-length'] = String(uploadBodySize);\n                    }\n                }\n            }\n        }\n        else if (cannotHaveBody) {\n            this._lockWrite();\n        }\n        else {\n            this._unlockWrite();\n        }\n        this[kBodySize] = Number(headers['content-length']) || undefined;\n    }\n    async _onResponseBase(response) {\n        const { options } = this;\n        const { url } = options;\n        this[kOriginalResponse] = response;\n        if (options.decompress) {\n            response = decompressResponse(response);\n        }\n        const statusCode = response.statusCode;\n        const typedResponse = response;\n        typedResponse.statusMessage = typedResponse.statusMessage ? typedResponse.statusMessage : http.STATUS_CODES[statusCode];\n        typedResponse.url = options.url.toString();\n        typedResponse.requestUrl = this.requestUrl;\n        typedResponse.redirectUrls = this.redirects;\n        typedResponse.request = this;\n        typedResponse.isFromCache = response.fromCache || false;\n        typedResponse.ip = this.ip;\n        typedResponse.retryCount = this.retryCount;\n        this[kIsFromCache] = typedResponse.isFromCache;\n        this[kResponseSize] = Number(response.headers['content-length']) || undefined;\n        this[kResponse] = response;\n        response.once('end', () => {\n            this[kResponseSize] = this[kDownloadedSize];\n            this.emit('downloadProgress', this.downloadProgress);\n        });\n        response.once('error', (error) => {\n            // Force clean-up, because some packages don't do this.\n            // TODO: Fix decompress-response\n            response.destroy();\n            this._beforeError(new ReadError(error, this));\n        });\n        response.once('aborted', () => {\n            this._beforeError(new ReadError({\n                name: 'Error',\n                message: 'The server aborted pending request',\n                code: 'ECONNRESET'\n            }, this));\n        });\n        this.emit('downloadProgress', this.downloadProgress);\n        const rawCookies = response.headers['set-cookie'];\n        if (is_1.default.object(options.cookieJar) && rawCookies) {\n            let promises = rawCookies.map(async (rawCookie) => options.cookieJar.setCookie(rawCookie, url.toString()));\n            if (options.ignoreInvalidCookies) {\n                promises = promises.map(async (p) => p.catch(() => { }));\n            }\n            try {\n                await Promise.all(promises);\n            }\n            catch (error) {\n                this._beforeError(error);\n                return;\n            }\n        }\n        if (options.followRedirect && response.headers.location && redirectCodes.has(statusCode)) {\n            // We're being redirected, we don't care about the response.\n            // It'd be best to abort the request, but we can't because\n            // we would have to sacrifice the TCP connection. We don't want that.\n            response.resume();\n            if (this[kRequest]) {\n                this[kCancelTimeouts]();\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this[kRequest];\n                this[kUnproxyEvents]();\n            }\n            const shouldBeGet = statusCode === 303 && options.method !== 'GET' && options.method !== 'HEAD';\n            if (shouldBeGet || !options.methodRewriting) {\n                // Server responded with \"see other\", indicating that the resource exists at another location,\n                // and the client should request it from that location via GET or HEAD.\n                options.method = 'GET';\n                if ('body' in options) {\n                    delete options.body;\n                }\n                if ('json' in options) {\n                    delete options.json;\n                }\n                if ('form' in options) {\n                    delete options.form;\n                }\n                this[kBody] = undefined;\n                delete options.headers['content-length'];\n            }\n            if (this.redirects.length >= options.maxRedirects) {\n                this._beforeError(new MaxRedirectsError(this));\n                return;\n            }\n            try {\n                // Do not remove. See https://github.com/sindresorhus/got/pull/214\n                const redirectBuffer = Buffer.from(response.headers.location, 'binary').toString();\n                // Handles invalid URLs. See https://github.com/sindresorhus/got/issues/604\n                const redirectUrl = new url_1.URL(redirectBuffer, url);\n                const redirectString = redirectUrl.toString();\n                decodeURI(redirectString);\n                // Redirecting to a different site, clear sensitive data.\n                if (redirectUrl.hostname !== url.hostname || redirectUrl.port !== url.port) {\n                    if ('host' in options.headers) {\n                        delete options.headers.host;\n                    }\n                    if ('cookie' in options.headers) {\n                        delete options.headers.cookie;\n                    }\n                    if ('authorization' in options.headers) {\n                        delete options.headers.authorization;\n                    }\n                    if (options.username || options.password) {\n                        options.username = '';\n                        options.password = '';\n                    }\n                }\n                else {\n                    redirectUrl.username = options.username;\n                    redirectUrl.password = options.password;\n                }\n                this.redirects.push(redirectString);\n                options.url = redirectUrl;\n                for (const hook of options.hooks.beforeRedirect) {\n                    // eslint-disable-next-line no-await-in-loop\n                    await hook(options, typedResponse);\n                }\n                this.emit('redirect', typedResponse, options);\n                await this._makeRequest();\n            }\n            catch (error) {\n                this._beforeError(error);\n                return;\n            }\n            return;\n        }\n        if (options.isStream && options.throwHttpErrors && !is_response_ok_1.isResponseOk(typedResponse)) {\n            this._beforeError(new HTTPError(typedResponse));\n            return;\n        }\n        response.on('readable', () => {\n            if (this[kTriggerRead]) {\n                this._read();\n            }\n        });\n        this.on('resume', () => {\n            response.resume();\n        });\n        this.on('pause', () => {\n            response.pause();\n        });\n        response.once('end', () => {\n            this.push(null);\n        });\n        this.emit('response', response);\n        for (const destination of this[kServerResponsesPiped]) {\n            if (destination.headersSent) {\n                continue;\n            }\n            // eslint-disable-next-line guard-for-in\n            for (const key in response.headers) {\n                const isAllowed = options.decompress ? key !== 'content-encoding' : true;\n                const value = response.headers[key];\n                if (isAllowed) {\n                    destination.setHeader(key, value);\n                }\n            }\n            destination.statusCode = statusCode;\n        }\n    }\n    async _onResponse(response) {\n        try {\n            await this._onResponseBase(response);\n        }\n        catch (error) {\n            /* istanbul ignore next: better safe than sorry */\n            this._beforeError(error);\n        }\n    }\n    _onRequest(request) {\n        const { options } = this;\n        const { timeout, url } = options;\n        http_timer_1.default(request);\n        this[kCancelTimeouts] = timed_out_1.default(request, timeout, url);\n        const responseEventName = options.cache ? 'cacheableResponse' : 'response';\n        request.once(responseEventName, (response) => {\n            void this._onResponse(response);\n        });\n        request.once('error', (error) => {\n            var _a;\n            // Force clean-up, because some packages (e.g. nock) don't do this.\n            request.destroy();\n            // Node.js <= 12.18.2 mistakenly emits the response `end` first.\n            (_a = request.res) === null || _a === void 0 ? void 0 : _a.removeAllListeners('end');\n            error = error instanceof timed_out_1.TimeoutError ? new TimeoutError(error, this.timings, this) : new RequestError(error.message, error, this);\n            this._beforeError(error);\n        });\n        this[kUnproxyEvents] = proxy_events_1.default(request, this, proxiedRequestEvents);\n        this[kRequest] = request;\n        this.emit('uploadProgress', this.uploadProgress);\n        // Send body\n        const body = this[kBody];\n        const currentRequest = this.redirects.length === 0 ? this : request;\n        if (is_1.default.nodeStream(body)) {\n            body.pipe(currentRequest);\n            body.once('error', (error) => {\n                this._beforeError(new UploadError(error, this));\n            });\n        }\n        else {\n            this._unlockWrite();\n            if (!is_1.default.undefined(body)) {\n                this._writeRequest(body, undefined, () => { });\n                currentRequest.end();\n                this._lockWrite();\n            }\n            else if (this._cannotHaveBody || this._noPipe) {\n                currentRequest.end();\n                this._lockWrite();\n            }\n        }\n        this.emit('request', request);\n    }\n    async _createCacheableRequest(url, options) {\n        return new Promise((resolve, reject) => {\n            // TODO: Remove `utils/url-to-options.ts` when `cacheable-request` is fixed\n            Object.assign(options, url_to_options_1.default(url));\n            // `http-cache-semantics` checks this\n            // TODO: Fix this ignore.\n            // @ts-expect-error\n            delete options.url;\n            let request;\n            // This is ugly\n            const cacheRequest = cacheableStore.get(options.cache)(options, async (response) => {\n                // TODO: Fix `cacheable-response`\n                response._readableState.autoDestroy = false;\n                if (request) {\n                    (await request).emit('cacheableResponse', response);\n                }\n                resolve(response);\n            });\n            // Restore options\n            options.url = url;\n            cacheRequest.once('error', reject);\n            cacheRequest.once('request', async (requestOrPromise) => {\n                request = requestOrPromise;\n                resolve(request);\n            });\n        });\n    }\n    async _makeRequest() {\n        var _a, _b, _c, _d, _e;\n        const { options } = this;\n        const { headers } = options;\n        for (const key in headers) {\n            if (is_1.default.undefined(headers[key])) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete headers[key];\n            }\n            else if (is_1.default.null_(headers[key])) {\n                throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n            }\n        }\n        if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {\n            headers['accept-encoding'] = supportsBrotli ? 'gzip, deflate, br' : 'gzip, deflate';\n        }\n        // Set cookies\n        if (options.cookieJar) {\n            const cookieString = await options.cookieJar.getCookieString(options.url.toString());\n            if (is_1.default.nonEmptyString(cookieString)) {\n                options.headers.cookie = cookieString;\n            }\n        }\n        for (const hook of options.hooks.beforeRequest) {\n            // eslint-disable-next-line no-await-in-loop\n            const result = await hook(options);\n            if (!is_1.default.undefined(result)) {\n                // @ts-expect-error Skip the type mismatch to support abstract responses\n                options.request = () => result;\n                break;\n            }\n        }\n        if (options.body && this[kBody] !== options.body) {\n            this[kBody] = options.body;\n        }\n        const { agent, request, timeout, url } = options;\n        if (options.dnsCache && !('lookup' in options)) {\n            options.lookup = options.dnsCache.lookup;\n        }\n        // UNIX sockets\n        if (url.hostname === 'unix') {\n            const matches = /(?<socketPath>.+?):(?<path>.+)/.exec(`${url.pathname}${url.search}`);\n            if (matches === null || matches === void 0 ? void 0 : matches.groups) {\n                const { socketPath, path } = matches.groups;\n                Object.assign(options, {\n                    socketPath,\n                    path,\n                    host: ''\n                });\n            }\n        }\n        const isHttps = url.protocol === 'https:';\n        // Fallback function\n        let fallbackFn;\n        if (options.http2) {\n            fallbackFn = http2wrapper.auto;\n        }\n        else {\n            fallbackFn = isHttps ? https.request : http.request;\n        }\n        const realFn = (_a = options.request) !== null && _a !== void 0 ? _a : fallbackFn;\n        // Cache support\n        const fn = options.cache ? this._createCacheableRequest : realFn;\n        // Pass an agent directly when HTTP2 is disabled\n        if (agent && !options.http2) {\n            options.agent = agent[isHttps ? 'https' : 'http'];\n        }\n        // Prepare plain HTTP request options\n        options[kRequest] = realFn;\n        delete options.request;\n        // TODO: Fix this ignore.\n        // @ts-expect-error\n        delete options.timeout;\n        const requestOptions = options;\n        requestOptions.shared = (_b = options.cacheOptions) === null || _b === void 0 ? void 0 : _b.shared;\n        requestOptions.cacheHeuristic = (_c = options.cacheOptions) === null || _c === void 0 ? void 0 : _c.cacheHeuristic;\n        requestOptions.immutableMinTimeToLive = (_d = options.cacheOptions) === null || _d === void 0 ? void 0 : _d.immutableMinTimeToLive;\n        requestOptions.ignoreCargoCult = (_e = options.cacheOptions) === null || _e === void 0 ? void 0 : _e.ignoreCargoCult;\n        // If `dnsLookupIpVersion` is not present do not override `family`\n        if (options.dnsLookupIpVersion !== undefined) {\n            try {\n                requestOptions.family = dns_ip_version_1.dnsLookupIpVersionToFamily(options.dnsLookupIpVersion);\n            }\n            catch (_f) {\n                throw new Error('Invalid `dnsLookupIpVersion` option value');\n            }\n        }\n        // HTTPS options remapping\n        if (options.https) {\n            if ('rejectUnauthorized' in options.https) {\n                requestOptions.rejectUnauthorized = options.https.rejectUnauthorized;\n            }\n            if (options.https.checkServerIdentity) {\n                requestOptions.checkServerIdentity = options.https.checkServerIdentity;\n            }\n            if (options.https.certificateAuthority) {\n                requestOptions.ca = options.https.certificateAuthority;\n            }\n            if (options.https.certificate) {\n                requestOptions.cert = options.https.certificate;\n            }\n            if (options.https.key) {\n                requestOptions.key = options.https.key;\n            }\n            if (options.https.passphrase) {\n                requestOptions.passphrase = options.https.passphrase;\n            }\n            if (options.https.pfx) {\n                requestOptions.pfx = options.https.pfx;\n            }\n        }\n        try {\n            let requestOrResponse = await fn(url, requestOptions);\n            if (is_1.default.undefined(requestOrResponse)) {\n                requestOrResponse = fallbackFn(url, requestOptions);\n            }\n            // Restore options\n            options.request = request;\n            options.timeout = timeout;\n            options.agent = agent;\n            // HTTPS options restore\n            if (options.https) {\n                if ('rejectUnauthorized' in options.https) {\n                    delete requestOptions.rejectUnauthorized;\n                }\n                if (options.https.checkServerIdentity) {\n                    // @ts-expect-error - This one will be removed when we remove the alias.\n                    delete requestOptions.checkServerIdentity;\n                }\n                if (options.https.certificateAuthority) {\n                    delete requestOptions.ca;\n                }\n                if (options.https.certificate) {\n                    delete requestOptions.cert;\n                }\n                if (options.https.key) {\n                    delete requestOptions.key;\n                }\n                if (options.https.passphrase) {\n                    delete requestOptions.passphrase;\n                }\n                if (options.https.pfx) {\n                    delete requestOptions.pfx;\n                }\n            }\n            if (isClientRequest(requestOrResponse)) {\n                this._onRequest(requestOrResponse);\n                // Emit the response after the stream has been ended\n            }\n            else if (this.writable) {\n                this.once('finish', () => {\n                    void this._onResponse(requestOrResponse);\n                });\n                this._unlockWrite();\n                this.end();\n                this._lockWrite();\n            }\n            else {\n                void this._onResponse(requestOrResponse);\n            }\n        }\n        catch (error) {\n            if (error instanceof CacheableRequest.CacheError) {\n                throw new CacheError(error, this);\n            }\n            throw new RequestError(error.message, error, this);\n        }\n    }\n    async _error(error) {\n        try {\n            for (const hook of this.options.hooks.beforeError) {\n                // eslint-disable-next-line no-await-in-loop\n                error = await hook(error);\n            }\n        }\n        catch (error_) {\n            error = new RequestError(error_.message, error_, this);\n        }\n        this.destroy(error);\n    }\n    _beforeError(error) {\n        if (this[kStopReading]) {\n            return;\n        }\n        const { options } = this;\n        const retryCount = this.retryCount + 1;\n        this[kStopReading] = true;\n        if (!(error instanceof RequestError)) {\n            error = new RequestError(error.message, error, this);\n        }\n        const typedError = error;\n        const { response } = typedError;\n        void (async () => {\n            if (response && !response.body) {\n                response.setEncoding(this._readableState.encoding);\n                try {\n                    response.rawBody = await get_buffer_1.default(response);\n                    response.body = response.rawBody.toString();\n                }\n                catch (_a) { }\n            }\n            if (this.listenerCount('retry') !== 0) {\n                let backoff;\n                try {\n                    let retryAfter;\n                    if (response && 'retry-after' in response.headers) {\n                        retryAfter = Number(response.headers['retry-after']);\n                        if (Number.isNaN(retryAfter)) {\n                            retryAfter = Date.parse(response.headers['retry-after']) - Date.now();\n                            if (retryAfter <= 0) {\n                                retryAfter = 1;\n                            }\n                        }\n                        else {\n                            retryAfter *= 1000;\n                        }\n                    }\n                    backoff = await options.retry.calculateDelay({\n                        attemptCount: retryCount,\n                        retryOptions: options.retry,\n                        error: typedError,\n                        retryAfter,\n                        computedValue: calculate_retry_delay_1.default({\n                            attemptCount: retryCount,\n                            retryOptions: options.retry,\n                            error: typedError,\n                            retryAfter,\n                            computedValue: 0\n                        })\n                    });\n                }\n                catch (error_) {\n                    void this._error(new RequestError(error_.message, error_, this));\n                    return;\n                }\n                if (backoff) {\n                    const retry = async () => {\n                        try {\n                            for (const hook of this.options.hooks.beforeRetry) {\n                                // eslint-disable-next-line no-await-in-loop\n                                await hook(this.options, typedError, retryCount);\n                            }\n                        }\n                        catch (error_) {\n                            void this._error(new RequestError(error_.message, error, this));\n                            return;\n                        }\n                        // Something forced us to abort the retry\n                        if (this.destroyed) {\n                            return;\n                        }\n                        this.destroy();\n                        this.emit('retry', retryCount, error);\n                    };\n                    this[kRetryTimeout] = setTimeout(retry, backoff);\n                    return;\n                }\n            }\n            void this._error(typedError);\n        })();\n    }\n    _read() {\n        this[kTriggerRead] = true;\n        const response = this[kResponse];\n        if (response && !this[kStopReading]) {\n            // We cannot put this in the `if` above\n            // because `.read()` also triggers the `end` event\n            if (response.readableLength) {\n                this[kTriggerRead] = false;\n            }\n            let data;\n            while ((data = response.read()) !== null) {\n                this[kDownloadedSize] += data.length;\n                this[kStartedReading] = true;\n                const progress = this.downloadProgress;\n                if (progress.percent < 1) {\n                    this.emit('downloadProgress', progress);\n                }\n                this.push(data);\n            }\n        }\n    }\n    // Node.js 12 has incorrect types, so the encoding must be a string\n    _write(chunk, encoding, callback) {\n        const write = () => {\n            this._writeRequest(chunk, encoding, callback);\n        };\n        if (this.requestInitialized) {\n            write();\n        }\n        else {\n            this[kJobs].push(write);\n        }\n    }\n    _writeRequest(chunk, encoding, callback) {\n        if (this[kRequest].destroyed) {\n            // Probably the `ClientRequest` instance will throw\n            return;\n        }\n        this._progressCallbacks.push(() => {\n            this[kUploadedSize] += Buffer.byteLength(chunk, encoding);\n            const progress = this.uploadProgress;\n            if (progress.percent < 1) {\n                this.emit('uploadProgress', progress);\n            }\n        });\n        // TODO: What happens if it's from cache? Then this[kRequest] won't be defined.\n        this[kRequest].write(chunk, encoding, (error) => {\n            if (!error && this._progressCallbacks.length > 0) {\n                this._progressCallbacks.shift()();\n            }\n            callback(error);\n        });\n    }\n    _final(callback) {\n        const endRequest = () => {\n            // FIX: Node.js 10 calls the write callback AFTER the end callback!\n            while (this._progressCallbacks.length !== 0) {\n                this._progressCallbacks.shift()();\n            }\n            // We need to check if `this[kRequest]` is present,\n            // because it isn't when we use cache.\n            if (!(kRequest in this)) {\n                callback();\n                return;\n            }\n            if (this[kRequest].destroyed) {\n                callback();\n                return;\n            }\n            this[kRequest].end((error) => {\n                if (!error) {\n                    this[kBodySize] = this[kUploadedSize];\n                    this.emit('uploadProgress', this.uploadProgress);\n                    this[kRequest].emit('upload-complete');\n                }\n                callback(error);\n            });\n        };\n        if (this.requestInitialized) {\n            endRequest();\n        }\n        else {\n            this[kJobs].push(endRequest);\n        }\n    }\n    _destroy(error, callback) {\n        var _a;\n        this[kStopReading] = true;\n        // Prevent further retries\n        clearTimeout(this[kRetryTimeout]);\n        if (kRequest in this) {\n            this[kCancelTimeouts]();\n            // TODO: Remove the next `if` when these get fixed:\n            // - https://github.com/nodejs/node/issues/32851\n            if (!((_a = this[kResponse]) === null || _a === void 0 ? void 0 : _a.complete)) {\n                this[kRequest].destroy();\n            }\n        }\n        if (error !== null && !is_1.default.undefined(error) && !(error instanceof RequestError)) {\n            error = new RequestError(error.message, error, this);\n        }\n        callback(error);\n    }\n    get _isAboutToError() {\n        return this[kStopReading];\n    }\n    /**\n    The remote IP address.\n    */\n    get ip() {\n        var _a;\n        return (_a = this.socket) === null || _a === void 0 ? void 0 : _a.remoteAddress;\n    }\n    /**\n    Indicates whether the request has been aborted or not.\n    */\n    get aborted() {\n        var _a, _b, _c;\n        return ((_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroyed) !== null && _b !== void 0 ? _b : this.destroyed) && !((_c = this[kOriginalResponse]) === null || _c === void 0 ? void 0 : _c.complete);\n    }\n    get socket() {\n        var _a, _b;\n        return (_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.socket) !== null && _b !== void 0 ? _b : undefined;\n    }\n    /**\n    Progress event for downloading (receiving a response).\n    */\n    get downloadProgress() {\n        let percent;\n        if (this[kResponseSize]) {\n            percent = this[kDownloadedSize] / this[kResponseSize];\n        }\n        else if (this[kResponseSize] === this[kDownloadedSize]) {\n            percent = 1;\n        }\n        else {\n            percent = 0;\n        }\n        return {\n            percent,\n            transferred: this[kDownloadedSize],\n            total: this[kResponseSize]\n        };\n    }\n    /**\n    Progress event for uploading (sending a request).\n    */\n    get uploadProgress() {\n        let percent;\n        if (this[kBodySize]) {\n            percent = this[kUploadedSize] / this[kBodySize];\n        }\n        else if (this[kBodySize] === this[kUploadedSize]) {\n            percent = 1;\n        }\n        else {\n            percent = 0;\n        }\n        return {\n            percent,\n            transferred: this[kUploadedSize],\n            total: this[kBodySize]\n        };\n    }\n    /**\n    The object contains the following properties:\n\n    - `start` - Time when the request started.\n    - `socket` - Time when a socket was assigned to the request.\n    - `lookup` - Time when the DNS lookup finished.\n    - `connect` - Time when the socket successfully connected.\n    - `secureConnect` - Time when the socket securely connected.\n    - `upload` - Time when the request finished uploading.\n    - `response` - Time when the request fired `response` event.\n    - `end` - Time when the response fired `end` event.\n    - `error` - Time when the request fired `error` event.\n    - `abort` - Time when the request fired `abort` event.\n    - `phases`\n        - `wait` - `timings.socket - timings.start`\n        - `dns` - `timings.lookup - timings.socket`\n        - `tcp` - `timings.connect - timings.lookup`\n        - `tls` - `timings.secureConnect - timings.connect`\n        - `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n        - `firstByte` - `timings.response - timings.upload`\n        - `download` - `timings.end - timings.response`\n        - `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n\n    If something has not been measured yet, it will be `undefined`.\n\n    __Note__: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n    */\n    get timings() {\n        var _a;\n        return (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.timings;\n    }\n    /**\n    Whether the response was retrieved from the cache.\n    */\n    get isFromCache() {\n        return this[kIsFromCache];\n    }\n    pipe(destination, options) {\n        if (this[kStartedReading]) {\n            throw new Error('Failed to pipe. The response has been emitted already.');\n        }\n        if (destination instanceof http_1.ServerResponse) {\n            this[kServerResponsesPiped].add(destination);\n        }\n        return super.pipe(destination, options);\n    }\n    unpipe(destination) {\n        if (destination instanceof http_1.ServerResponse) {\n            this[kServerResponsesPiped].delete(destination);\n        }\n        super.unpipe(destination);\n        return this;\n    }\n}\nexports.default = Request;\n"]},"metadata":{},"sourceType":"script"}