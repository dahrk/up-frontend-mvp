{"ast":null,"code":"'use strict'; // We define these manually to ensure they're always copied\n// even if they would move up the prototype chain\n// https://nodejs.org/api/http.html#http_class_http_incomingmessage\n\nconst knownProperties = ['aborted', 'complete', 'headers', 'httpVersion', 'httpVersionMinor', 'httpVersionMajor', 'method', 'rawHeaders', 'rawTrailers', 'setTimeout', 'socket', 'statusCode', 'statusMessage', 'trailers', 'url'];\n\nmodule.exports = (fromStream, toStream) => {\n  if (toStream._readableState.autoDestroy) {\n    throw new Error('The second stream must have the `autoDestroy` option set to `false`');\n  }\n\n  const fromProperties = new Set(Object.keys(fromStream).concat(knownProperties));\n  const properties = {};\n\n  for (const property of fromProperties) {\n    // Don't overwrite existing properties.\n    if (property in toStream) {\n      continue;\n    }\n\n    properties[property] = {\n      get() {\n        const value = fromStream[property];\n        const isFunction = typeof value === 'function';\n        return isFunction ? value.bind(fromStream) : value;\n      },\n\n      set(value) {\n        fromStream[property] = value;\n      },\n\n      enumerable: true,\n      configurable: false\n    };\n  }\n\n  Object.defineProperties(toStream, properties);\n  fromStream.once('aborted', () => {\n    toStream.destroy();\n    toStream.emit('aborted');\n  });\n  fromStream.once('close', () => {\n    if (fromStream.complete) {\n      if (toStream.readable) {\n        toStream.once('end', () => {\n          toStream.emit('close');\n        });\n      } else {\n        toStream.emit('close');\n      }\n    } else {\n      toStream.emit('close');\n    }\n  });\n  return toStream;\n};","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/mimic-response/index.js"],"names":["knownProperties","module","exports","fromStream","toStream","_readableState","autoDestroy","Error","fromProperties","Set","Object","keys","concat","properties","property","get","value","isFunction","bind","set","enumerable","configurable","defineProperties","once","destroy","emit","complete","readable"],"mappings":"AAAA,a,CAEA;AACA;AACA;;AACA,MAAMA,eAAe,GAAG,CACvB,SADuB,EAEvB,UAFuB,EAGvB,SAHuB,EAIvB,aAJuB,EAKvB,kBALuB,EAMvB,kBANuB,EAOvB,QAPuB,EAQvB,YARuB,EASvB,aATuB,EAUvB,YAVuB,EAWvB,QAXuB,EAYvB,YAZuB,EAavB,eAbuB,EAcvB,UAduB,EAevB,KAfuB,CAAxB;;AAkBAC,MAAM,CAACC,OAAP,GAAiB,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC1C,MAAIA,QAAQ,CAACC,cAAT,CAAwBC,WAA5B,EAAyC;AACxC,UAAM,IAAIC,KAAJ,CAAU,qEAAV,CAAN;AACA;;AAED,QAAMC,cAAc,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYR,UAAZ,EAAwBS,MAAxB,CAA+BZ,eAA/B,CAAR,CAAvB;AAEA,QAAMa,UAAU,GAAG,EAAnB;;AAEA,OAAK,MAAMC,QAAX,IAAuBN,cAAvB,EAAuC;AACtC;AACA,QAAIM,QAAQ,IAAIV,QAAhB,EAA0B;AACzB;AACA;;AAEDS,IAAAA,UAAU,CAACC,QAAD,CAAV,GAAuB;AACtBC,MAAAA,GAAG,GAAG;AACL,cAAMC,KAAK,GAAGb,UAAU,CAACW,QAAD,CAAxB;AACA,cAAMG,UAAU,GAAG,OAAOD,KAAP,KAAiB,UAApC;AAEA,eAAOC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWf,UAAX,CAAH,GAA4Ba,KAA7C;AACA,OANqB;;AAOtBG,MAAAA,GAAG,CAACH,KAAD,EAAQ;AACVb,QAAAA,UAAU,CAACW,QAAD,CAAV,GAAuBE,KAAvB;AACA,OATqB;;AAUtBI,MAAAA,UAAU,EAAE,IAVU;AAWtBC,MAAAA,YAAY,EAAE;AAXQ,KAAvB;AAaA;;AAEDX,EAAAA,MAAM,CAACY,gBAAP,CAAwBlB,QAAxB,EAAkCS,UAAlC;AAEAV,EAAAA,UAAU,CAACoB,IAAX,CAAgB,SAAhB,EAA2B,MAAM;AAChCnB,IAAAA,QAAQ,CAACoB,OAAT;AAEApB,IAAAA,QAAQ,CAACqB,IAAT,CAAc,SAAd;AACA,GAJD;AAMAtB,EAAAA,UAAU,CAACoB,IAAX,CAAgB,OAAhB,EAAyB,MAAM;AAC9B,QAAIpB,UAAU,CAACuB,QAAf,EAAyB;AACxB,UAAItB,QAAQ,CAACuB,QAAb,EAAuB;AACtBvB,QAAAA,QAAQ,CAACmB,IAAT,CAAc,KAAd,EAAqB,MAAM;AAC1BnB,UAAAA,QAAQ,CAACqB,IAAT,CAAc,OAAd;AACA,SAFD;AAGA,OAJD,MAIO;AACNrB,QAAAA,QAAQ,CAACqB,IAAT,CAAc,OAAd;AACA;AACD,KARD,MAQO;AACNrB,MAAAA,QAAQ,CAACqB,IAAT,CAAc,OAAd;AACA;AACD,GAZD;AAcA,SAAOrB,QAAP;AACA,CArDD","sourcesContent":["'use strict';\n\n// We define these manually to ensure they're always copied\n// even if they would move up the prototype chain\n// https://nodejs.org/api/http.html#http_class_http_incomingmessage\nconst knownProperties = [\n\t'aborted',\n\t'complete',\n\t'headers',\n\t'httpVersion',\n\t'httpVersionMinor',\n\t'httpVersionMajor',\n\t'method',\n\t'rawHeaders',\n\t'rawTrailers',\n\t'setTimeout',\n\t'socket',\n\t'statusCode',\n\t'statusMessage',\n\t'trailers',\n\t'url'\n];\n\nmodule.exports = (fromStream, toStream) => {\n\tif (toStream._readableState.autoDestroy) {\n\t\tthrow new Error('The second stream must have the `autoDestroy` option set to `false`');\n\t}\n\n\tconst fromProperties = new Set(Object.keys(fromStream).concat(knownProperties));\n\n\tconst properties = {};\n\n\tfor (const property of fromProperties) {\n\t\t// Don't overwrite existing properties.\n\t\tif (property in toStream) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tproperties[property] = {\n\t\t\tget() {\n\t\t\t\tconst value = fromStream[property];\n\t\t\t\tconst isFunction = typeof value === 'function';\n\n\t\t\t\treturn isFunction ? value.bind(fromStream) : value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tfromStream[property] = value;\n\t\t\t},\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false\n\t\t};\n\t}\n\n\tObject.defineProperties(toStream, properties);\n\n\tfromStream.once('aborted', () => {\n\t\ttoStream.destroy();\n\n\t\ttoStream.emit('aborted');\n\t});\n\n\tfromStream.once('close', () => {\n\t\tif (fromStream.complete) {\n\t\t\tif (toStream.readable) {\n\t\t\t\ttoStream.once('end', () => {\n\t\t\t\t\ttoStream.emit('close');\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttoStream.emit('close');\n\t\t\t}\n\t\t} else {\n\t\t\ttoStream.emit('close');\n\t\t}\n\t});\n\n\treturn toStream;\n};\n"]},"metadata":{},"sourceType":"script"}