{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst is_1 = require(\"@sindresorhus/is\");\n\nconst normalizeArguments = (options, defaults) => {\n  if (is_1.default.null_(options.encoding)) {\n    throw new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');\n  }\n\n  is_1.assert.any([is_1.default.string, is_1.default.undefined], options.encoding);\n  is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.resolveBodyOnly);\n  is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.methodRewriting);\n  is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.isStream);\n  is_1.assert.any([is_1.default.string, is_1.default.undefined], options.responseType); // `options.responseType`\n\n  if (options.responseType === undefined) {\n    options.responseType = 'text';\n  } // `options.retry`\n\n\n  const {\n    retry\n  } = options;\n\n  if (defaults) {\n    options.retry = { ...defaults.retry\n    };\n  } else {\n    options.retry = {\n      calculateDelay: retryObject => retryObject.computedValue,\n      limit: 0,\n      methods: [],\n      statusCodes: [],\n      errorCodes: [],\n      maxRetryAfter: undefined\n    };\n  }\n\n  if (is_1.default.object(retry)) {\n    options.retry = { ...options.retry,\n      ...retry\n    };\n    options.retry.methods = [...new Set(options.retry.methods.map(method => method.toUpperCase()))];\n    options.retry.statusCodes = [...new Set(options.retry.statusCodes)];\n    options.retry.errorCodes = [...new Set(options.retry.errorCodes)];\n  } else if (is_1.default.number(retry)) {\n    options.retry.limit = retry;\n  }\n\n  if (is_1.default.undefined(options.retry.maxRetryAfter)) {\n    options.retry.maxRetryAfter = Math.min( // TypeScript is not smart enough to handle `.filter(x => is.number(x))`.\n    // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n    ...[options.timeout.request, options.timeout.connect].filter(is_1.default.number));\n  } // `options.pagination`\n\n\n  if (is_1.default.object(options.pagination)) {\n    if (defaults) {\n      options.pagination = { ...defaults.pagination,\n        ...options.pagination\n      };\n    }\n\n    const {\n      pagination\n    } = options;\n\n    if (!is_1.default.function_(pagination.transform)) {\n      throw new Error('`options.pagination.transform` must be implemented');\n    }\n\n    if (!is_1.default.function_(pagination.shouldContinue)) {\n      throw new Error('`options.pagination.shouldContinue` must be implemented');\n    }\n\n    if (!is_1.default.function_(pagination.filter)) {\n      throw new TypeError('`options.pagination.filter` must be implemented');\n    }\n\n    if (!is_1.default.function_(pagination.paginate)) {\n      throw new Error('`options.pagination.paginate` must be implemented');\n    }\n  } // JSON mode\n\n\n  if (options.responseType === 'json' && options.headers.accept === undefined) {\n    options.headers.accept = 'application/json';\n  }\n\n  return options;\n};\n\nexports.default = normalizeArguments;","map":{"version":3,"sources":["/home/td/code/up-frontend-mvp/node_modules/got/dist/source/as-promise/normalize-arguments.js"],"names":["Object","defineProperty","exports","value","is_1","require","normalizeArguments","options","defaults","default","null_","encoding","TypeError","assert","any","string","undefined","boolean","resolveBodyOnly","methodRewriting","isStream","responseType","retry","calculateDelay","retryObject","computedValue","limit","methods","statusCodes","errorCodes","maxRetryAfter","object","Set","map","method","toUpperCase","number","Math","min","timeout","request","connect","filter","pagination","function_","transform","Error","shouldContinue","paginate","headers","accept"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_1 = require(\"@sindresorhus/is\");\nconst normalizeArguments = (options, defaults) => {\n    if (is_1.default.null_(options.encoding)) {\n        throw new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');\n    }\n    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.encoding);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.resolveBodyOnly);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.methodRewriting);\n    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.isStream);\n    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.responseType);\n    // `options.responseType`\n    if (options.responseType === undefined) {\n        options.responseType = 'text';\n    }\n    // `options.retry`\n    const { retry } = options;\n    if (defaults) {\n        options.retry = { ...defaults.retry };\n    }\n    else {\n        options.retry = {\n            calculateDelay: retryObject => retryObject.computedValue,\n            limit: 0,\n            methods: [],\n            statusCodes: [],\n            errorCodes: [],\n            maxRetryAfter: undefined\n        };\n    }\n    if (is_1.default.object(retry)) {\n        options.retry = {\n            ...options.retry,\n            ...retry\n        };\n        options.retry.methods = [...new Set(options.retry.methods.map(method => method.toUpperCase()))];\n        options.retry.statusCodes = [...new Set(options.retry.statusCodes)];\n        options.retry.errorCodes = [...new Set(options.retry.errorCodes)];\n    }\n    else if (is_1.default.number(retry)) {\n        options.retry.limit = retry;\n    }\n    if (is_1.default.undefined(options.retry.maxRetryAfter)) {\n        options.retry.maxRetryAfter = Math.min(\n        // TypeScript is not smart enough to handle `.filter(x => is.number(x))`.\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        ...[options.timeout.request, options.timeout.connect].filter(is_1.default.number));\n    }\n    // `options.pagination`\n    if (is_1.default.object(options.pagination)) {\n        if (defaults) {\n            options.pagination = {\n                ...defaults.pagination,\n                ...options.pagination\n            };\n        }\n        const { pagination } = options;\n        if (!is_1.default.function_(pagination.transform)) {\n            throw new Error('`options.pagination.transform` must be implemented');\n        }\n        if (!is_1.default.function_(pagination.shouldContinue)) {\n            throw new Error('`options.pagination.shouldContinue` must be implemented');\n        }\n        if (!is_1.default.function_(pagination.filter)) {\n            throw new TypeError('`options.pagination.filter` must be implemented');\n        }\n        if (!is_1.default.function_(pagination.paginate)) {\n            throw new Error('`options.pagination.paginate` must be implemented');\n        }\n    }\n    // JSON mode\n    if (options.responseType === 'json' && options.headers.accept === undefined) {\n        options.headers.accept = 'application/json';\n    }\n    return options;\n};\nexports.default = normalizeArguments;\n"]},"metadata":{},"sourceType":"script"}