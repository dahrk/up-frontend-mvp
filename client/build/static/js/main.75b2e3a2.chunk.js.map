{"version":3,"sources":["App.js","reportWebVitals.js","index.js","../node_modules/http2/lib/protocol sync"],"names":["console","log","calendar","App","useState","title","setTitle","notes","setNotes","handleNotionSubmit","a","JSON","stringify","fetch","method","headers","body","response","responseGoogle","className","type","name","value","onChange","e","target","disabled","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","scopes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","id"],"mappings":"uPAKAA,QAAQC,IAAIC,YAyFGC,MAvFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAIPC,EAAkB,uCAAG,4BAAAC,EAAA,6DACzBV,QAAQC,IAAIU,KAAKC,UAAU,CAAEP,MAAOA,EAAOE,MAAOA,KADzB,SAEFM,MAAM,oBAAqB,CAChDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAML,KAAKC,UAAU,CAAEP,MAAOA,EAAOE,MAAOA,MAPrB,OAEnBU,EAFmB,OASzBjB,QAAQC,IAAIgB,GATa,2CAAH,qDAwClBC,EAAiB,SAACD,GACtBjB,QAAQC,IAAIgB,IAGd,OACE,sBAAKE,UAAU,MAAf,UACE,gCACE,sDACA,oDACA,uBACEC,KAAK,OACLC,KAAK,iBACLC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAASkB,EAAEC,OAAOH,UAErC,oDACA,uBACEF,KAAK,OACLC,KAAK,iBACLC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOH,UAErC,wBAAQI,UAAQ,EAACC,QAAS,kBAAMlB,GAAhC,8BAIF,gCACE,0EACA,cAAC,cAAD,CACEmB,SAAS,2EACTC,WAAW,QACXC,UAAWZ,EACXa,UAAWb,EACXc,aAAc,qBACdC,OACE,yHC1EGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,8SChBA,SAASc,EAAoBC,GAC5B,IAAIzB,EAAI,IAAI0B,MAAM,uBAAyBD,EAAM,KAEjD,MADAzB,EAAE2B,KAAO,mBACH3B,EAEPwB,EAAoBI,KAAO,WAAa,MAAO,IAC/CJ,EAAoBK,QAAUL,EAC9BM,EAAOC,QAAUP,EACjBA,EAAoBQ,GAAK,M","file":"static/js/main.75b2e3a2.chunk.js","sourcesContent":["import \"./App.css\";\n\nimport { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { calendar } from \"googleapis\";\nconsole.log(calendar);\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  const handleNotionSubmit = async () => {\n    console.log(JSON.stringify({ title: title, notes: notes }));\n    const response = await fetch(\"/api/addPrinciple\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ title: title, notes: notes }),\n    });\n    console.log(response);\n  };\n\n  /*\n  function listEvents(auth) {\n    const calendar = google.calendar({ version: \"v3\", auth });\n    calendar.events.list(\n      {\n        calendarId: \"primary\",\n        timeMin: new Date().toISOString(),\n        maxResults: 10,\n        singleEvents: true,\n        orderBy: \"startTime\",\n      },\n      (err, res) => {\n        if (err) return console.log(\"The API returned an error: \" + err);\n        const events = res.data.items;\n        if (events.length) {\n          console.log(\"Upcoming 10 events:\");\n          events.map((event, i) => {\n            const start = event.start.dateTime || event.start.date;\n            console.log(`${start} - ${event.summary}`);\n          });\n        } else {\n          console.log(\"No upcoming events found.\");\n        }\n      }\n    );\n  }\n  */\n\n  const responseGoogle = (response) => {\n    console.log(response);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h4>Sick demo principles</h4>\n        <label>Principle title</label>\n        <input\n          type=\"text\"\n          name=\"principleTitle\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Principle notes</label>\n        <input\n          type=\"text\"\n          name=\"principleNotes\"\n          value={notes}\n          onChange={(e) => setNotes(e.target.value)}\n        />\n        <button disabled onClick={() => handleNotionSubmit}>\n          Add Principle\n        </button>\n      </div>\n      <div>\n        <h4>Google Calendar Login and Authentication</h4>\n        <GoogleLogin\n          clientId=\"165194383544-aiqotfhsn1v8tt36ljvegalvp0vhscri.apps.googleusercontent.com\"\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={\"single_host_origin\"}\n          scopes={\n            \"https://www.googleapis.com/auth/calendar.events.readonly https://www.googleapis.com/auth/calendar.app.created\"\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 795;"],"sourceRoot":""}